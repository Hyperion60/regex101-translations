{
    "'{0}' found at index {1}": "'{0}' trouvé à la position {1}",
    "(except for line terminators)": "(sauf pour les fins de ligne)",
    "{1} Alternative": "{1} Alternance",
    "{1} and {2} are also available with the use of '{3}'": "{1} et {2} sont aussi disponibles quand '{3}' est utilisé",
    "{1} can be used to match the same text the third preceding capture group matched and captured.": "{1} can be used to match the same text the third preceding capture group matched and captured.",
    "{1} Capturing Group": "{1} Groupe de capture",
    "{1} is a line separator which can stand for {2}, {3}, {4}, or {5}.": "{1} is a line separator which can stand for {2}, {3}, {4}, or {5}.",
    "{1} is a paragraph separator (PS) character.": "{1} is a paragraph separator (PS) character.",
    "{1} is NEL, next line character.": "{1} is NEL, next line character.",
    "{1} match": "{1} correspondance",
    "{1} matches": "{1} correspondances",
    "{1} modifier:": "{1} modificateur :",
    "{1} step": "{1} étape",
    "{1} steps": "{1} étapes",
    "{1} subpattern": "{1} subpattern",
    "{1} test failed": "{1} test failed",
    "{1} tests failed": "{1} tests failed",
    "{1} upvotes, {2} downvotes ({3}% like it)": "{1} positifs, {2} négatifs ({3}% aiment ça)",
    "{1} user(s) (including you) have a score of {2}, better than {3}% of submissions": "{1} user(s) (including you) have a score of {2}, better than {3}% of submissions",
    "{1} user(s) have a score of {2}, better than {3}% of submissions": "{1} user(s) have a score of {2}, better than {3}% of submissions",
    "{1} would be the second previous capture group, for example. {2} would be the third capture group.": "{1} would be the second previous capture group, for example. {2} would be the third capture group.",
    "{1}, matches any position": "{1}, correspondances à toutes positions",
    "{1}. A {2} followed by a letter with no special meaning is faulted": "{1}. Un {2} suivi d'une lettre sans sémantique particulière est erroné",
    "{1}. A dot won't match {2}": "{1}. Un point ne fera pas correspondre {2}",
    "{1}. All capturing groups {2} are instead treated as if they were non-capturing groups {3}.": "{1}. All capturing groups {2} are instead treated as if they were non-capturing groups {3}.",
    "{1}. All matches (don't return after first match)": "{1}. Toutes les correspondances (ne retourne pas après la première correspondance)",
    "{1}. Apply case insensitive matching to unicode characters in accordance with the unicode standard": "{1}. Apply case insensitive matching to unicode characters in accordance with the unicode standard",
    "{1}. Capturing groups {2} are no longer treated as if they were non-capturing groups {3}.": "{1}. Capturing groups {2} are no longer treated as if they were non-capturing groups {3}.",
    "{1}. Case insensitive match (ignores case of {2})": "{1}. Correspondance insensible à la casse (ignore la casse de {2})",
    "{1}. Case insensitive matching is only applied to the US-ASCII character set": "{1}. Case insensitive matching is only applied to the US-ASCII character set",
    "{1}. Case sensitive match": "{1}. Correspondance sensible à la casse",
    "{1}. Causes {2} and {3} to match begin/end of string": "{1}. Entraîne {2} et {3} à correspondre au début et à la fin de la chaîne",
    "{1}. Causes {2} and {3} to match the begin/end of each line (not only begin/end of string)": "{1}. Entraîne {2} et {3} à correspondre au début et à la fin de chaque ligne (pas seulement au début ou à la fin de la chaîne)",
    "{1}. Dot matches newline characters {2}": "{1}. Dot matches newline characters {2}",
    "{1}. Enable all unicode features and interpret all unicode escape sequences as such": "{1}. Active toutes les fonctionnalités Unicode et interprète toutes les séquences d'échappement comme telles",
    "{1}. Enable the built in character classes to also match unicode characters": "{1}. Enable the built in character classes to also match unicode characters",
    "{1}. Force the a dollar sign, {2}, to always match end of the string, instead of end of the line. This option is ignored if the {3}-flag is set": "{1}. Force le symbole dollar, {2}, à toujours correspondre à la fin de la chaîne, au lieu de la fin de ligne. Cette option est ignorée si le drapeau {3} est utilisé",
    "{1}. Force the escape sequences {2}, {3}, {4}, {5}, {6}, {7}, {8} and {9} to perform ASCII-only matching instead of full Unicode matching": "{1}. Force les séquences d'échappement {2}, {3}, {4}, {5}, {6}, {7}, {8} et {9} à ne rechercher que des correspondances ASCII au lieu des correpondances Unicode complètes",
    "{1}. Force the pattern to only match consecutive matches from where the previous match ended.": "{1}. Force le motif à ne correspondre qu'à des correspondances consécutives depuis là où la dernière correspondance s'est terminée.",
    "{1}. Make {2}, {3}, {4}, {5}, {6}, {7}, {8} and {9} perform matching with Unicode semantic (redundant in Python 3)": "{1}. Entraîne {2}, {3}, {4}, {5}, {6}, {7}, {8} et {9} à correspondre à tout caractère Unicode (redondant en Python 3)",
    "{1}. Pattern strings are treated as {2}. Also causes escape sequences to match unicode characters": "{1}. Les chaînes de motifs sont traitées comme {2}. Entraîne également la correspondance des caractères Unicode par les séquences d'échappement",
    "{1}. Spaces and text after a {2} in the pattern are ignored": "{1}. Les espaces et le texte après un {2} dans le motif sont ignorés",
    "{1}. Spaces and text after a {2} in the pattern are ignored (even whitespace inside character classes)": "{1}. Spaces and text after a {2} in the pattern are ignored (even whitespace inside character classes)",
    "{1}. The JavaScript regex engine now returns the indices at which the regex matched in the subject string.": "{1}. The JavaScript regex engine now returns the indices at which the regex matched in the subject string.",
    "{1}. The match becomes greedy by default": "{1}. La correspondance devient exhaustive par défaut",
    "{1}. The match becomes lazy by default. Now a {2} following a quantifier makes it greedy": "{1}. La correspondance devient paresseuse par défaut. Un quantificateur suivi d'un {2} la fait devenir gloutonne",
    "{1}. The pattern is forced to become anchored at the start of the search, or at the position of the last successful match, equivalent to a {2}": "{1}. The pattern is forced to become anchored at the start of the search, or at the position of the last successful match, equivalent to a {2}",
    "{1}. Whitespaces and {2} in the pattern are treated literally": "{1}. Les espaces et {2} dans le motif sont traités littéralement.",
    "`(?R1)` checks if a call to capture group 1 was made, which will return false the first time it is encountered because the regex engine is simply parsing capture group one.": "`(?R1)` vérifie si un appel à la construction de regroupement 1 a été fait, ce qui retournera faux la première fois que cela est rencontré car le moteur d'expression régulière est simplement en train d'analyser syntaxiquement la construction de regroupement 1.",
    "^ and $ match start/end of line": "^ et $ correspondent au début/à la fin de ligne",
    "$ matches only end of pattern": "$ correspond seulement à la fin du motif",
    "3 or more of a": "3 ou plus de",
    "A case insensitive match is performed, meaning capital letters will be matched by non-capital letters and vice versa.": "Une correspondance sans respect de la casse est effectuée, ce qui signifie que des lettres majuscules correspondront à des lettres minuscules, et inversement.",
    "A character except: a, b or c": "Un caractère, sauf : a, b ou c",
    "A character in the range: a-z": "Un caractère dans la plage: a-z",
    "A character in the range: a-z or A-Z": "Un caractère dans la plage : a-z ou A-Z",
    "A character not in the range: a-z": "Un caractère hors de la plage : a-z",
    "A common misconception is that repeating a capture group would create separate IDs for each time it matches. If that functionality is needed, one has to rely on the global (/g) flag instead. For example: {1}": "A common misconception is that repeating a capture group would create separate IDs for each time it matches. If that functionality is needed, one has to rely on the global (/g) flag instead. For example: {1}",
    "a line": "une ligne",
    "A lookbehind assertion has to be fixed width": "Une assertion arrière doit être de largeur fixe",
    "A named subpattern may not have a name which length exceeds 32 characters": "Le nom d'un sous-motif ne peut pas excéder 32 caractères",
    "A non-capturing group allows you to apply quantifiers to part of your regex but does not capture/assign an ID.": "A non-capturing group allows you to apply quantifiers to part of your regex but does not capture/assign an ID.",
    "A posix character class may only appear inside a character class": "Un caractère posix ne peut apparaître que dans une classe de caractères",
    "A quantifier following a lookaround serves no purpose, and can safely be removed from the regular expression": "A quantifier following a lookaround serves no purpose, and can safely be removed from the regular expression",
    "A quantifier inside a lookbehind makes it non-fixed width": "Un quantificateur à l'intérieur d'un regard arrière qui la rend non fixe en largeur",
    "A quote without content has ambiguous behavior and should be avoided": "A quote without content has ambiguous behavior and should be avoided",
    "A repeated capturing group will only capture the last iteration. Put a capturing group around the repeated group to capture all iterations or use a non-capturing group instead if you're not interested in the data": "Un groupe de capture répétitif ne capturera que la dernière itération. Utilisez un groupe de capture autour du groupe de capture répétitif pour capture toutes les itérations ou utilisez un groupe non capturant si les données ne vous intéressent pas.",
    "A single character of: a, b or c": "Un unique caractère de : a, b ou c",
    "A single character of: a, b, c or d": "A single character of: a, b, c or d",
    "A special thanks goes out to the following individuals for their hard work and contributions to the quiz:": "A special thanks goes out to the following individuals for their hard work and contributions to the quiz:",
    "A subpattern name must be alpha numeric and may not begin with a digit": "Le nom d'un sous-motif doit être composé de caractères alphanumériques et ne doit pas commencer par un chiffre",
    "A subpattern name must be unique": "Le nom d'un sous-motif doit être unique",
    "A word boundary": "La limite d'un mot",
    "Absolute end of string": "La fin absolue d'une chaîne de caractère",
    "Account": "Compte",
    "Account Page": "Mon compte",
    "acts like {1}, except that if the pattern is unanchored, the bumpalong advance is not to the next character, but to the position in the subject where {2} was encountered": "agit comme {1}, sauf que si le motif est non ancré, l'avance indirecte n'est pas vers le caractère suivant, mais vers la position dans le sujet où {2} a été rencontré",
    "Add bold text": "Ajouter du gras",
    "Add bulleted list": "Ajouter une liste à point •",
    "Add header": "Ajouter un en-tête",
    "Add italic text": "Ajouter de l'italic",
    "Add numbered list": "Ajouter une liste numérotée",
    "Add tag": "Ajouter un tag",
    "Add test": "Add test",
    "Add to favorites": "Ajouter au favoris",
    "Add to Public Library": "Add to Public Library",
    "After Match": "After Match",
    "After you have finished a task you can continue improving upon your solution, making it shorter, and climb higher into the leader boards.": "After you have finished a task you can continue improving upon your solution, making it shorter, and climb higher into the leader boards.",
    "All associated data with your account will be permanently deleted, such as your saved expressions, your library entries, and your quiz progression.": "All associated data with your account will be permanently deleted, such as your saved expressions, your library entries, and your quiz progression.",
    "All settings to control the application are located here.": "Tous les paramètres de contrôle de l'application sont situés ici.",
    "All tests passed": "All tests passed",
    "All the errors detected are listed below, from left to right, as they appear in the pattern.": "Toutes les erreurs détectées sont listées ci-dessous, de gauche à droite selon leur apparition dans le schéma.",
    "All Tokens": "Tous les tokens",
    "Allow duplicate subpattern names": "Autoriser les noms de sous-modèles (subpattern) en double",
    "Allow others to edit permalink": "Autoriser les autres à éditer le permalien",
    "Allows case insensitive matching of unicode characters, not only US-ASCII.": "Allows case insensitive matching of unicode characters, not only US-ASCII.",
    "Allows regex to match unicode characters via dotall and unicode escape sequences, as well as ES6 unicode code point escapes such as {1} which is made up of {2}.": "Allows regex to match unicode characters via dotall and unicode escape sequences, as well as ES6 unicode code point escapes such as {1} which is made up of {2}.",
    "Also known as global mode, it instruct the engine not to stop after the first match has been found, but rather to continue until no more matches can be found.": "Also known as global mode, it instruct the engine not to stop after the first match has been found, but rather to continue until no more matches can be found.",
    "Alternate - match either a or b": "Alternate - match either a or b",
    "Alternative": "Alternative",
    "Always collapse left sidebar": "Toujours replier la barre de gauche",
    "Always collapse right sidebar": "Toujours replier la barre de droite",
    "An alternate way to match alphabet letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "An alternate way to match alphabet letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "An alternate way to match any letter or digit. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "An alternate way to match any letter or digit. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "An empty alternative effectively makes this group optional which suggests the alternative is completely redundant": "Une alternative vide rend effectivement ce groupe optionnel, ce qui suggère que cette alternative est complètement redondante.",
    "An error occurred while fetching the resource": "An error occurred while fetching the resource",
    "An explanation of your regex will be automatically generated as you type.": "Une explication de votre regex sera automatiquement générée au fur et à mesure de votre frappe.",
    "An unescaped delimiter must be escaped with a backslash ({1})": "An unescaped delimiter must be escaped with a backslash ({1})",
    "Anchor": "Ancre",
    "Anchor to start of pattern, or at the end of the most recent match": "Anchor to start of pattern, or at the end of the most recent match",
    "Anchors": "Ancres",
    "anonymous": "anonyme",
    "Another option is enabling the x flag to allow `# comments` but it will also cause the regex engine to ignore space characters. To match space characters you have to escape them: {1}.": "Another option is enabling the x flag to allow `# comments` but it will also cause the regex engine to ignore space characters. To match space characters you have to escape them: {1}.",
    "Any changes to the library entry, both the expression, as well as title/description/etc, can be made at the following url: {1}": "Any changes to the library entry, both the expression, as well as title/description/etc, can be made at the following url: {1}",
    "Any character following a {1} that is not a valid meta sequence will be faulted and raise an error. {2}, for example, will cause an error, and it will not match.": "Any character following a {1} that is not a valid meta sequence will be faulted and raise an error. {2}, for example, will cause an error, and it will not match.",
    "Any characters between {1} and {2}, including metacharacters, will be treated as literals.": "Any characters between {1} and {2}, including metacharacters, will be treated as literals.",
    "Any digit": "tout chiffre",
    "Any non-digit": "Tout non chiffres",
    "Any non-whitespace character": "Tout caractère non-espace",
    "Any non-word character": "Tout caractère autre qu'un mot",
    "Any single character": "Tout simple caractères",
    "Any text appearing in this group is ignored in the regex.": "Any text appearing in this group is ignored in the regex.",
    "Any Unicode sequences, linebreaks included": "Toutes les séquences Unicode, sauts de ligne inclus",
    "Any whitespace character": "tout les espaces",
    "Any word can be used as a tag": "Tout les mots qui sont utilisés comme un tag",
    "Any word character": "tout les mots",
    "approximately {1} ms": "approximately {1} ms",
    "Are you sure you want to delete this regex? This action is non-reversible and will delete all versions of this regex.": "Êtes-vous sur de vouloir supprimer cette regex ? Cette action est non-réversible et cela supprimera toutes les versions de cette regex.",
    "Are you sure you want to delete your account?": "Are you sure you want to delete your account?",
    "as few times as possible, expanding as needed": "aussi peu de fois que possible, en augmentant au besoin",
    "as many times as possible, giving back as needed": "autant de fois que possible, redonner au besoin",
    "as many times as possible, without giving back": "autant de fois que possible, sans redonner",
    "ASCII codes 0-127": "code ASCII de 0-127",
    "ASCII control characters": "caractère de contrôle ASCII",
    "assert position at a word boundary: {1}": "assert position at a word boundary: {1}",
    "assert position where {1} does not match": "affirmer une position où {1} ne correspond pas",
    "assert that {1} {2}": "assert that {1} {2}",
    "Assert that the Regex below does not match": "Affirmez que la regex ci-dessous ne correspond pas",
    "Assert that the Regex below matches": "Affirmez que le regex ci-dessous correspond",
    "asserts position at start of {1}": "affirme sa position au début de {1}",
    "asserts position at start of the string": "affirme la position au début de la chaîne",
    "asserts position at the end of a line": "affirme sa position à la fin d'une ligne",
    "asserts position at the end of the previous match or the start of the string for the first match": "affirme sa position à la fin de la précédente correspondance ou au début de la chaîne pour la première correspondance",
    "asserts position at the end of the string": "affirme sa position à la fin de la chaîne",
    "asserts position at the end of the string, or before the line terminator right at the end of the string (if any)": "affirme sa position à la fin de la chaîne, ou avant le terminateur de ligne, juste à la fin de la chaîne (le cas échéant)",
    "Asserts that the given subpattern can be matched here, without consuming characters": "Affirme que le sous-modèle donné peut être mis en correspondance ici, sans consommer de caractères",
    "Atomic Group": "Groupe atomique",
    "Atomic group (non-capturing)": "Groupe atomique (non capturant)",
    "Author": "Auteur",
    "Auto-complete Brackets": "Supports à remplissage automatique",
    "Automatic": "Automatic",
    "Available keyboard shortcuts": "Available keyboard shortcuts",
    "Avoid using this legacy syntax for any new patterns.": "Avoid using this legacy syntax for any new patterns.",
    "Backreference": "Backreference",
    "Backreferences may not be placed inside character classes. If you meant to create an octal escape, prefix the escape with a 0.": "Backreferences may not be placed inside character classes. If you meant to create an octal escape, prefix the escape with a 0.",
    "Backspace": "Backspace",
    "Backspace character": "Caractère de retour arrière",
    "Backticks can not be used in a raw string, use {1} instead": "Backticks can not be used in a raw string, use {1} instead",
    "Because you are not signed in this entry has not been tied to an account. It is recommended you sign in so that your entries are never lost and you can manage them from the account page whenever you like.": "Parce que vous n'êtes pas connecté, cette entrée n'a pas été liée à un compte. Il est recommandé de vous connecter afin que vos entrées ne soient jamais perdues et de pouvoir les gérer à partir de la page du compte quand vous le souhaitez.",
    "Become a sponsor!": "Become a sponsor!",
    "Before even attempting a match, the regex engine makes some checks, such as the length of the string. If it is not long enough to fit the pattern, it will automatically return a no match. This optimization can be disabled by using this modifier.": "Avant même de tenter une correspondance, le moteur des expressions rationnelles effectue certaines vérifications, telles que la longueur de la chaîne. Si ce n'est pas assez long pour s'adapter au motif, il retournera automatiquement pas de correspondance (no match). Cette optimisation peut être désactivée en utilisant ce modificateur.",
    "Before Match": "Before Match",
    "Between 3 and 6 of a": "Entre 3 et 6 d'une",
    "Bogus escape: this escape is not recognized in the python flavor": "Bogus escape: cette fuite n'est pas reconnue dans la saveur de python",
    "Branch Reset Group": "Groupe de réinitialisation de branche",
    "Bug Reports & Feedback": "Bugs & Retours",
    "Bugs or suggestions go here": "Les bugs ou les suggestions vont ici",
    "By default, {1} matches any unicode newline character or sequence thereof. Its behavior can be controlled by newline convention verbs like {2} or {3}.": "By default, {1} matches any unicode newline character or sequence thereof. Its behavior can be controlled by newline convention verbs like {2} or {3}.",
    "By signing in you also get the ability to enhance your skills and participate in the {1} along with thousands of other regex connoisseurs!": "By signing in you also get the ability to enhance your skills and participate in the {1} along with thousands of other regex connoisseurs!",
    "By signing in, all your expressions will be automatically saved to your account, where you have ability to organize and manage them.": "By signing in, all your expressions will be automatically saved to your account, where you have ability to organize and manage them.",
    "Cancel": "Annuler",
    "Capture everything enclosed": "Capturez tout ce qui est enfermé",
    "capture group {1}": "groupe de capture {1}",
    "Capture Group {1} is {2} ... and so on": "Le groupe de capture {1} est {2} ... et ainsi de suite",
    "Capture Group {1} is {2} and its start/end positions can be obtained via {3} and {4}": "Le groupe de capture {1} est {2} et ses positions de début / fin peuvent être obtenues via {3} et {4}.",
    "Carriage return": "Retour de chariot",
    "Case insensitive": "Insensible à la casse",
    "case insensitive": "insensible à la casse",
    "Case insensitive match": "Correspondance insensible à la casse",
    "Case insensitive matching affects unicode characters as well": "Case insensitive matching affects unicode characters as well",
    "Case Modifier": "Case Modifier",
    "case sensitive": "sensible à la casse",
    "Catastrophic Backtracking": "Retour en arrière catastrophique",
    "Catastrophic backtracking has been detected and the execution of your expression has been halted. To find out more and what this is, please read the following article:": "Catastrophic backtracking has been detected and the execution of your expression has been halted. To find out more and what this is, please read the following article:",
    "Category": "Catégorie",
    "causes a skip to the next innermost alternative if the rest of the pattern does not match": "cause un saut vers l'alternative interne suivante si le reste de l'expression ne correspond pas",
    "Causes the regex engine to give up on the current match if it tries to backtrack past {1}'s position. This is useful when looking to cut down on backtracking at specific points in the regex. Equivalent to {2}.": "Causes the regex engine to give up on the current match if it tries to backtrack past {1}'s position. This is useful when looking to cut down on backtracking at specific points in the regex. Equivalent to {2}.",
    "Causes the regex to exit if it tries to backtrack past {1}'s position. This is useful when looking to cut down on backtracking at specific points in the regex. Equivalent to {2}.": "Causes the regex to exit if it tries to backtrack past {1}'s position. This is useful when looking to cut down on backtracking at specific points in the regex. Equivalent to {2}.",
    "causes the whole match to fail outright if the rest of the pattern does not match": "Toute la sélection échoue si le reste du pattern ne correspond pas",
    "causes token to be ignored": "cause le jeton à être ignoré",
    "Change delimiter": "Délimiteur de changement",
    "Character Class": "Character Class",
    "Character class intersection": "Character class intersection",
    "Character class missing closing bracket": "La classe de caractère manque une parenthèse fermante",
    "Character Classes": "Classes de caractères",
    "Character range is out of order": "Le groupe de caractères n'est pas dans l'ordre.",
    "Character range with surrogate pairs without unicode enabled results in ambiguous behavior": "Character range with surrogate pairs without unicode enabled results in ambiguous behavior",
    "Checks whether the {1} subroutine matches": "Checks whether the {1} subroutine matches",
    "Checks whether the whole pattern matches": "Checks whether the whole pattern matches",
    "Class Intersection": "Class Intersection",
    "Clear": "Clear",
    "Close": "Fermez",
    "Close details": "Détails",
    "Code Generator": "Générateur de code",
    "Collapse all tests": "Réduire tous les tests",
    "Collapse test": "Collapse test",
    "Comment": "Commentaire",
    "Comment group": "Comment group",
    "Common Tokens": "Jetons communs",
    "Complete match contents": "Contenus complets de correspondance",
    "Conditional": "Conditional",
    "Conditional statement": "Expression conditionnelle",
    "Conditionally matches one of two options depending on whether the {1} capturing group matched": "Conditionally matches one of two options depending on whether the {1} capturing group matched",
    "Conditionally matches one of two options depending on whether the lookaround matches": "Conditionally matches one of two options depending on whether the lookaround matches",
    "Contact": "Contacte",
    "contains": "contient",
    "Contents after match": "Contenu après correspondance",
    "Contents before match": "Contenu avant correspondance",
    "Contents in capture group `foo`": "Contenu du groupe de capture `foo`",
    "Contents in capture group 1": "Contenu du groupe de capture 1",
    "Control": "Contrôle",
    "Control Character": "Control Character",
    "Control character Y": "Caractère de contrôle Y",
    "Control characters": "Caractères de contrôle",
    "Control verb": "Verbe de contrôle",
    "Converts all subsequent tokens to their {1} equivalence until {2} is encountered": "Converts all subsequent tokens to their {1} equivalence until {2} is encountered",
    "Converts metacharacters to literal characters, and also allows literal matching of the regex delimiter in use, like `/`.": "Converts metacharacters to literal characters, and also allows literal matching of the regex delimiter in use, like `/`.",
    "Converts the subsequent token to their {1} equivalence": "Converts the subsequent token to their {1} equivalence",
    "Copied!": "Copié!",
    "Copy to clipboard": "Copier dans le presse-papiers",
    "Current score: {1}": "Current score: {1}",
    "Dark": "Sombre",
    "Data": "Données",
    "Debug Test": "Debug Test",
    "Decimal digits": "Nombres décimaux",
    "Decrease speed": "Decrease speed",
    "Decrease step range": "Decrease step range",
    "Default code generator language": "Default code generator language",
    "Default flavor": "Moteur par défaut",
    "Definition": "Definition",
    "Delete": "Supprimer",
    "Delete account": "Delete account",
    "Delete Account and Data": "Delete Account and Data",
    "Delete library entry": "Supprimer l'entrée de la bibliothèque",
    "Delete permalink": "Supprimer le permalien",
    "Delete Regex": "Supprimer la regex",
    "Delete regular expression": "Delete regular expression",
    "Delimiters": "Délimiteurs",
    "Description": "Description",
    "Description of regular expression": "Description de l'expression régulière",
    "Detailed match information will be displayed here automatically.": "Les informations de correspondance seront affichées ici automatiquement.",
    "Disable all keyboard shortcuts": "Disable all keyboard shortcuts",
    "Disallow duplicate subpattern names": "Interdire les noms de sous-expressions dupliqués",
    "Disallow meaningless escapes": "Interdire les séquences d'échappement inutiles",
    "Disallow others to edit permalink": "Désactiver l'édition des permaliens par des tiers",
    "Disallows backtracking past {1}'s position, and gives up matching the current alternation if there's a failure. If instead {1} is used outside of an alternation, it will act like {3}. Equivalent to {2}.": "Disallows backtracking past {1}'s position, and gives up matching the current alternation if there's a failure. If instead {1} is used outside of an alternation, it will act like {3}. Equivalent to {2}.",
    "Do note that these tasks do not necessarily promote best practices in real life scenarios, but rather aim to teach you the fundamentals of writing powerful regular expressions.": "Do note that these tasks do not necessarily promote best practices in real life scenarios, but rather aim to teach you the fundamentals of writing powerful regular expressions.",
    "does {1} match": "does {1} match",
    "does match": "Ne correspond pas",
    "Does not allow the capture group ID to be incremented for all enclosed capture groups.": "Does not allow the capture group ID to be incremented for all enclosed capture groups.",
    "Don't return after first match": "Ne pas retourner après le premier résultat",
    "Donate": "Faire un don",
    "Dot matches newline": "Le point correspond à une nouvelle ligne",
    "Downvote": "Downvote",
    "Due to a bug in PCRE creating ranges with an escaped literal is unsafe. To avoid this, simply use the literal representation instead": "Due to a bug in PCRE creating ranges with an escaped literal is unsafe. To avoid this, simply use the literal representation instead",
    "Duplicate group names": "Noms de groupe en double",
    "Duplicate/reset subpattern group number": "Duplicate/reset subpattern group number",
    "Edit account entry": "Modifier le paramètre de compte",
    "Edit Library Entry": "Edit Library Entry",
    "Edit personal title": "Edit personal title",
    "Edit title and tags": "Modifier le titre et les mots-clés",
    "Editor": "Editeur",
    "Else match the following regex": "Sinon, faire correspondre l'expression régulière suivante",
    "empty character class — matches {1}": "classe de caractères vide — correspond à {1}",
    "empty string": "Chaîne de caractères vide",
    "Enable or disable the syntax highlighting of your regular expression in the editor": "Enable or disable the syntax highlighting of your regular expression in the editor",
    "Enable unicode support": "Activer la prise en charge d'Unicode",
    "Enables unicode support for predefined classes": "Enables unicode support for predefined classes",
    "End of string": "Fin de chaîne de caractères",
    "End of word": "Fin de mot",
    "End quote literals without a corresponding open quote literal {1} match null, and only serve to create visual noise. If you meant to match the literal {2}, remove the backslash.": "End quote literals without a corresponding open quote literal {1} match null, and only serve to create visual noise. If you meant to match the literal {2}, remove the backslash.",
    "ends with": "se termine par",
    "Engine Error": "Erreur du moteur",
    "Enjoy!": "Enjoy!",
    "Ensures that the given pattern will match, ending at the current position in the expression. The pattern be of variable width. Does not consume any characters.": "Ensures that the given pattern will match, ending at the current position in the expression. The pattern be of variable width. Does not consume any characters.",
    "Ensures that the given pattern will match, ending at the current position in the expression. The pattern must have a fixed width. Does not consume any characters.": "Garantit que l'expression donnée correspondra, tout en finissant à la position actuelle dans l'expression. Celle-ci doit avoir une longueur fixe. Cela ne consomme aucun caractère.",
    "Ensures that the given pattern would not match and end at the current position in the expression. The pattern be of variable width. Does not consume characters.": "Ensures that the given pattern would not match and end at the current position in the expression. The pattern be of variable width. Does not consume characters.",
    "Ensures that the given pattern would not match and end at the current position in the expression. The pattern must have a fixed width. Does not consume characters.": "Garantit que l'expression donnée ne correspondra pas, tout en finissant à la position actuelle dans l'expression. Celle-ci doit avoir une longueur fixe. Cela ne consomme aucun caractère.",
    "Enter your regex and hit submit to see the result.": "Enter your regex and hit submit to see the result.",
    "equals": "égal à",
    "Equivalent to {1}": "Equivalent to {1}",
    "equivalent to {1}": "equivalent to {1}",
    "Equivalent to {1}.": "Equivalent to {1}.",
    "Equivalent to boolean OR": "Equivalent to boolean OR",
    "Error reported by engine: {1}": "Error reported by engine: {1}",
    "Escape sequences like {1} will also match unicode characters.": "Escape sequences like {1} will also match unicode characters.",
    "Exactly 3 of a": "Exactement 3 de",
    "Expand all tests": "Développer tous les tests",
    "Expand test": "Expand test",
    "Expected group {1} to contain `{2}` but did not": "Le groupe {1} aurait dû contenir `{2}`, mais ce n'est pas le cas",
    "Expected group {1} to end with `{2}` but was instead `{3}`": "Le groupe {1} aurait dû se terminer par `{2}`, mais `{3}` a été trouvé",
    "Expected group {1} to equal `{2}` but was instead `{3}`": "Le groupe {1} aurait dû être égal à `{2}`, mais `{3}` a été trouvé",
    "Expected group {1} to start with `{2}` but was instead `{3}`": "Le groupe {1} aurait dû commencer par `{2}`, mais `{3}` a été trouvé",
    "Expected regex to match, but did not.": "Une correspondance de l'expression régulière était attendue, mais cela n'a pas été le cas.",
    "Expected regex to not match, but did.": "Une non-correspondance de l'expression régulière était attendue, mais cela n'a pas été le cas.",
    "Explanation": "Explication",
    "Export Matches": "Exporter les correspondances",
    "Export Method": "Méthode d'exportation",
    "eXtra": "eXtra",
    "Favorite Regex": "Expression régulière favorite",
    "Fewest Points": "Fewest Points",
    "Filter by Flavor": "Filtrer selon un moteur",
    "Flags/Modifiers": "Flags/Modificateurs",
    "Flavor": "Moteur",
    "Follow me on twitter!": "Suivez moi sur twitter !",
    "For a full regex reference for {1}, please visit:": "Pour plus de détails à propos de {1}, veuillez visiter:",
    "For example, repeating 1-3 digits and a period 3 times can be done like this: {1}": "For example, repeating 1-3 digits and a period 3 times can be done like this: {1}",
    "Force a matching failure at a specific point in the regex. Equivalent to {1}, and a synonym of {2}.": "Force a matching failure at a specific point in the regex. Equivalent to {1}, and a synonym of {2}.",
    "Full match": "Correspondance entière",
    "full match": "correspondance entière",
    "Full Match": "Correspondance Entière",
    "Full Search Result": "Résultats complets de la recherche",
    "Function": "Function",
    "General": "Général",
    "General Tokens": "Jetons Généraux",
    "Generated Code": "Code généré",
    "given the following test string": "given the following test string",
    "given the string {1} assert that {2} {3} {4}": "given the string {1} assert that {2} {3} {4}",
    "Global": "Global",
    "Global pattern flags": "Flags d'expression globaux",
    "Go to beginning": "Go to beginning",
    "Go to end": "Go to end",
    "Go to library entry": "Go to library entry",
    "Go to the beginning": "Go to the beginning",
    "Go to the end": "Go to the end",
    "Golang/RE2, Python, and Javascript consider {1} to be just vertical tab (ascii {2}).": "Golang/RE2, Python, and Javascript consider {1} to be just vertical tab (ascii {2}).",
    "Golang/RE2, Python, and Javascript equivalent is {1}.": "Golang/RE2, Python, and Javascript equivalent is {1}.",
    "greedy": "gourmand",
    "Greedy quantifier": "Quantificateur gourmand",
    "Group": "Groupe",
    "Group {1}": "Groupe {1}",
    "Group {1} found at {2}": "Groupe {1} trouvé à {2}",
    "Group {1} no longer exists in the pattern or did not participate in the match": "Le groupe {1} n'existe plus dans l'expression, ou n'a pas participé à la correspondance.",
    "Group {1} was not expected to participate in the match but did anyway": "Le groupe {1} n'était pas censé participer dans la correspondance, mais cela a été le cas",
    "Group Constructs": "Constructions de regroupement",
    "group did not participate in match": "groupe n'a pas participé dans la correpondance",
    "Groups with the same index must either have the same name or both be non-named groups": "Les groupes ayant le même index doivent avoir le même nom, ou ne doivent pas être nommés",
    "Headers": "En-têtes",
    "here": "here",
    "Here comes a {1} tab character.": "Voilà un {1} caractère de tabulation.",
    "Hex": "Hex",
    "Hex character YY": "Caractère hexadécimal YY",
    "Hex character YYYY": "Caractère hexadécimal YYYY",
    "Hexadecimal digits": "Chiffres hexadécimaux",
    "Hexadecimal replacement values": "Valeurs de remplacement hexadécimales",
    "Highlight Syntax": "Coloriser la syntaxe",
    "Horizontal whitespace character": "Caractère d'espacement horizontal",
    "If capturing group 1 returned a match, the pattern before the alternate {1} is matched. Otherwise, the pattern after the alternate {1} is matched.": "If capturing group 1 returned a match, the pattern before the alternate {1} is matched. Otherwise, the pattern after the alternate {1} is matched.",
    "If condition is met, match the following regex": "Si la condition est satisfaite, faire correspondre l'expression régulière suivante",
    "If left to automatic, the code generator will mirror the currently selected flavor in the editor": "If left to automatic, the code generator will mirror the currently selected flavor in the editor",
    "If recursion of the whole pattern is successful, match the pattern before the {1} otherwise match the pattern after the {1}.": "If recursion of the whole pattern is successful, match the pattern before the {1} otherwise match the pattern after the {1}.",
    "If the lookahead succeeds, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative also. Global flag breaks conditionals.": "If the lookahead succeeds, matches the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative also. Global flag breaks conditionals.",
    "If the lookbehind succeeds, match the pattern before the vertical bar. Otherwise, matches the pattern after the vertical bar. The lookaround can be negative. Global flag, 'g', breaks conditionals.": "Si la postanalyse réussit, fait correspondre l'expression avant la barre verticale. Sinon, fait correspondre l'expression après la barre verticale. L'analyse peut être négative. Le flag Global empêche les conditions de s'exécuter.",
    "If this token is inside a capturing group, only that capturing group is ended successfully at that particular location, while the parent pattern continues to execute.": "Si ce jeton se trouve à l'intérieur d'un groupe de capture, seul ce groupe est terminé à cette position donnée, alors que l'expression parente continue son exécution.",
    "If you are working on very large and complex expressions, turning this option off will yield improved performance": "If you are working on very large and complex expressions, turning this option off will yield improved performance",
    "If you encounter any issues, quirky behavior or bugs, please open up an issue on github with all the relevant details": "If you encounter any issues, quirky behavior or bugs, please open up an issue on github with all the relevant details",
    "If you want to permanently remove the saved data, you can easily do so from here. The delete link will be automatically tied to your account, so you never have to worry about losing it.": "If you want to permanently remove the saved data, you can easily do so from here. The delete link will be automatically tied to your account, so you never have to worry about losing it.",
    "If you're running an ad blocker, consider whitelisting regex101 to support the website. Thank you.": "If you're running an ad blocker, consider whitelisting regex101 to support the website. Thank you.",
    "Ignore whitespace": "Ignorer les espaces blancs",
    "Ignore whitespace / verbose": "Ignore whitespace / verbose",
    "In PCRE a recursion test {1}, group name {2}, or a relative position {3} can be used as the conditional. Global flag breaks conditionals as the engine does a second pass over an already matched/consumed string.": "In PCRE a recursion test {1}, group name {2}, or a relative position {3} can be used as the conditional. Global flag breaks conditionals as the engine does a second pass over an already matched/consumed string.",
    "In the example below, the first alternate matched \"a\", and the second one matched \"bc\", however once it bumped into \"X\" none of the alternatives resulted in a match. Therefore the engine cannot return the next \"a\" as a match because \"X\" is not the last location where a match occurred.": "Dans l'exemple ci-dessous, la première alternative a fait correspondre \"a\", et la seconde \"bc\". Lorsque l'exécution est arrivée à \"X\", aucune de ces alternatives n'a retourné une correspondance. Le moteur ne peut alors pas retourner le \"a\" qui suit, car \"X\" n'est pas la dernière position où une correspondance a été trouvée.",
    "In this case `(?(R&sub1)...|...)` checks if a call to `sub1` has been made. The first time the recursive conditional is parsed, the engine is in the process of matching what `sub1` requires, not yet finished. Conditional will return false and match `ky` instead.": "In this case `(?(R&sub1)...|...)` checks if a call to `sub1` has been made. The first time the recursive conditional is parsed, the engine is in the process of matching what `sub1` requires, not yet finished. Conditional will return false and match `ky` instead.",
    "Include full match in exported data": "Include full match in exported data",
    "Include non-participating groups in match result": "Inclure les groupes non-participants dans le résultat de correspondance",
    "include the latest version of the regex crate in your Cargo.toml": "inclure la version la plus récente du regex crate dans le fichier Cargo.toml",
    "Incomplete group structure": "Structure de groupe incomplète",
    "Increase speed": "Increase speed",
    "Increase step range": "Increase step range",
    "Inline comment, discarded by the engine when matching the regex": "Inline comment, discarded by the engine when matching the regex",
    "Inline modifiers": "Modificateurs en-ligne",
    "Insert a carriage return": "Insert a carriage return",
    "Insert a carriage return character.": "Insérer un caractère de retour chariot (Entrée).",
    "Insert a form-feed": "Insert a form-feed",
    "Insert a form-feed character.": "Insérer un caractère de saut de page.",
    "Insert a newline": "Insert a newline",
    "Insert a newline character.": "Insérer un caractère de nouvelle ligne.",
    "Insert a personal title": "Spécifier un titre personnel",
    "Insert a tab": "Insert a tab",
    "Insert a tab character.": "Insérer un caractère de tabulation.",
    "Insert code snippet": "Insérer du code",
    "insert comparison string": "insérer une chaine de caractères de comparaison",
    "Insert link": "Insérer un lien",
    "Insert quote": "Insérer une quote",
    "insert test description": "spécifier une description pour le test",
    "insert test string": "entrez la chaîne de test",
    "insert your regular expression here": "entrez votre expression régulière ici",
    "insert your replacement value here": "entrez la valeur de remplacement ici",
    "insert your test string here": "entrez votre chaîne de test ici",
    "inserts a carriage return {1}": "inserts a carriage return {1}",
    "inserts a form-feed character {1}": "inserts a form-feed character {1}",
    "inserts a line-feed (newline) character {1}": "inserts a line-feed (newline) character {1}",
    "inserts a tab character {1}": "inserts a tab character {1}",
    "inserts esc {1}": "inserts esc {1}",
    "inserts the bell character {1}": "inserts the bell character {1}",
    "inserts the character {1} with index {2} ({3} or {4})": "inserts the character {1} with index {2} ({3} or {4})",
    "inserts the matched substring": "inserts the matched substring",
    "inserts the portion of the string that follows the matched substring": "inserts the portion of the string that follows the matched substring",
    "inserts the portion of the string that precedes the matched substring": "inserts the portion of the string that precedes the matched substring",
    "inserts the same text as most recently matched by the {1} capturing group": "inserts the same text as most recently matched by the {1} capturing group",
    "inserts the same text as most recently matched by the capturing group named {1}": "inserts the same text as most recently matched by the capturing group named {1}",
    "inserts the same text as most recently matched by the entire pattern": "inserts the same text as most recently matched by the entire pattern",
    "Internal engine error: {1}": "Erreur interne du moteur : {1}",
    "interpolate {1}": "interpolate {1}",
    "interpolate {1} {2}": "interpolate {1} {2}",
    "Introduction": "Introduction",
    "Invalid character class intersection. Make sure the tokens to the left and right of this token are intersectable": "Invalid character class intersection. Make sure the tokens to the left and right of this token are intersectable",
    "Invalid control character": "Caractère de contrôle invalide",
    "Invalid placement of hyphen; there may only be one inside the group": "Invalid placement of hyphen; there may only be one inside the group",
    "Invalid unicode escape": "Séquence d'échappement Unicode invalide",
    "is null": "est null",
    "Isolates part of the full match to be later referred to by ID within the regex or the matches array. IDs start at 1.": "Isolates part of the full match to be later referred to by ID within the regex or the matches array. IDs start at 1.",
    "Jump {1} steps backwards": "Jump {1} steps backwards",
    "Jump {1} steps forward": "Jump {1} steps forward",
    "Keep in mind that Python 3 is going to treat your whole script as unicode by default, therefore using this flag would be redundant. See the {1} flag to limit matches to ASCII characters only. Python 2 requires this flag to turn on unicode support.": "Keep in mind that Python 3 is going to treat your whole script as unicode by default, therefore using this flag would be redundant. See the {1} flag to limit matches to ASCII characters only. Python 2 requires this flag to turn on unicode support.",
    "Keyboard Shortcuts": "Keyboard Shortcuts",
    "Language": "Langage",
    "lazy": "paresseux",
    "Lazy quantifier": "Quantificateur paresseux",
    "Letters": "Lettres",
    "Letters and digits": "Lettres et chiffres",
    "Library entries": "Entrées de bibliothèque",
    "Library Entry": "Entrée de bibliothèque",
    "Light": "Lumineux",
    "Like regex101? Support it by donating!": "Vous aimez regex101 ? Soutenez le développeur en faisant un don !",
    "Limits the number of recursions the engine is allowed to make to `d` times. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.": "Limits the number of recursions the engine is allowed to make to `d` times. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.",
    "Limits the number of times the regex engine is allowed to call `match()` to `x` times. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.": "Limits the number of times the regex engine is allowed to call `match()` to `x` times. This user set limit cannot be increased past the compile time value or the default, however it can be restricted.",
    "Line break modifier": "Modificateur de saut de ligne",
    "Line terminator(s) are: {1} {2}": "Line terminator(s) are: {1} {2}",
    "Lines are delimited by: {1} {2}": "Lines are delimited by: {1} {2}",
    "Link to regular expression": "Lien vers l'expression régulière",
    "List": "List",
    "Live Help": "Live Help",
    "Load example in editor": "Load example in editor",
    "Loading changelog...": "Loading changelog...",
    "Loading code sample...": "Loading code sample...",
    "Loading markdown...": "Loading markdown...",
    "Loading...": "Chargement...",
    "Localized inline modifiers": "Localized inline modifiers",
    "Lonely End Quote": "Lonely End Quote",
    "Lookahead conditional": "Condition de préanalyse",
    "Lookaround": "Lookaround",
    "Lookbehind conditional": "Condition de postanalyse",
    "lowercase": "minuscules",
    "Lowercase letters": "Lettres minuscules",
    "Lowercase Transformation": "Transformation en caractères minuscules",
    "Make escape sequences perform ASCII-only matching": "Forcer les séquences d'échappement à effectuer des correspondances ASCII uniquement",
    "Make permalink private": "Créer le permalien en mode privé",
    "Make permalink public": "Créer le permalien en mode public",
    "Make quantifiers lazy": "Changer les quantificateurs afin qu'ils soient paresseux",
    "Make regex perform ASCII-only matching instead of full Unicode matching. Applies to [a-z] ranges and escape sequences.": "Forcer l'expression régulière a effectuer des correspondances ASCII au lieu des correspondances Unicode. S'applique aux classes de caractères [a-z] et aux séquences d'échappement.",
    "Makes any character literal": "Fait de n'importe caractère un littéral",
    "Makes it so that any unicode newline character or sequence thereof counts as a line break.": "Makes it so that any unicode newline character or sequence thereof counts as a line break.",
    "Makes it so that either a carriage return character or a line feed character, or the two in sequence are considered a line break.": "Makes it so that either a carriage return character or a line feed character, or the two in sequence are considered a line break.",
    "Makes it so that only a carriage return character followed by a line feed character is considered a line break. Common in Windows documents.": "Makes it so that only a carriage return character followed by a line feed character is considered a line break. Common in Windows documents.",
    "Makes it so that only a carriage return character is considered a line break.": "Makes it so that only a carriage return character is considered a line break.",
    "Makes it so that only a line feed character is considered a line break. Common in UNIX documents.": "Makes it so that only a line feed character is considered a line break. Common in UNIX documents.",
    "marker verb whose main purpose is to track how a match was arrived at": "verbe de marquage dont la seule responsabilité est de traquer la position d'une correspondance",
    "Match": "Correspondance",
    "Match {1}": "Correspondance {1}",
    "Match {1} failed in {2} step(s)": "Correspondance {1} échouée en {2} étape(s)",
    "Match {1} found in {2} step(s)": "Correspondance {1} trouvée {2} étape(s)",
    "Match {1} halted after {2} step(s)": "Correspondance {1} arrêtée après {2} étape(s)",
    "Match {1} was found at {2}": "Correspondance {1} trouvée à {2}",
    "Match a single character not present in both the lists below": "Match a single character not present in both the lists below",
    "match a single character not present in the intersection of tokens within this set": "match a single character not present in the intersection of tokens within this set",
    "Match a single character not present in the list below": "Faire correspondre un caractère unique qui n'est pas présent dans la liste ci-dessous",
    "match a single character not present in the set": "match a single character not present in the set",
    "Match a single character present in both the lists below": "Match a single character present in both the lists below",
    "match a single character present in the intersection of tokens within this set": "match a single character present in the intersection of tokens within this set",
    "Match a single character present in the list below": "Faire correspondre un caractère unique présent dans la liste ci-dessous",
    "match a single character present in the set": "match a single character present in the set",
    "match any non-word character in any script (equivalent to {1})": "match any non-word character in any script (equivalent to {1})",
    "match any word character in any script (equivalent to {1})": "match any word character in any script (equivalent to {1})",
    "Match anything but a newline": "Match anything but a newline",
    "Match everything enclosed": "Match everything enclosed",
    "Match Information": "Informations de correspondance",
    "Match nth subpattern": "Fait correspondre la n-ième sous-expression",
    "Match one data unit": "Fait correspondre une unité de données",
    "Match previously-named capture group `letter`": "Match previously-named capture group `letter`",
    "Match Step {1}": "Match Step {1}",
    "Match Steps": "Match Steps",
    "Match subpattern `name`": "Fait correspondre la sous-expression nommé `name`",
    "Match subpattern number #": "Match subpattern number #",
    "Match text the nth relative previous subpattern matched": "Match text the nth relative previous subpattern matched",
    "match the remainder of the pattern with the following effective flags: {1}": "match the remainder of the pattern with the following effective flags: {1}",
    "Match was found at {1}": "Correspondance trouvée à la position {1}",
    "Match with full unicode": "Match with full unicode",
    "matches a alphabetic character {1}": "matches a alphabetic character {1}",
    "matches a alphanumeric character {1}": "matches a alphanumeric character {1}",
    "matches a alphanumeric character or {1} {2} (also written as {3})": "matches a alphanumeric character or {1} {2} (also written as {3})",
    "matches a backspace character {1}": "matches a backspace character {1}",
    "matches a carriage return {1}": "matches a carriage return {1}",
    "Matches a carriage return, unicode character U+2185.": "Matches a carriage return, unicode character U+2185.",
    "matches a character intended to be combined with another character (e.g. accents, umlauts, enclosing boxes, etc.)": "matches a character intended to be combined with another character (e.g. accents, umlauts, enclosing boxes, etc.)",
    "matches a character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages)": "matches a character intended to be combined with another character that takes up extra space (vowel signs in many Eastern languages)",
    "matches a character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.)": "matches a character intended to be combined with another character without taking up extra space (e.g. accents, umlauts, etc.)",
    "matches a character that encloses the character is is combined with (circle, square, keycap, etc.)": "matches a character that encloses the character is is combined with (circle, square, keycap, etc.)",
    "matches a character with {1} value {2} through {3}": "matches a character with {1} value {2} through {3}",
    "matches a combining character (mark) as a full character on its own": "matches a combining character (mark) as a full character on its own",
    "matches a control character {1}": "matches a control character {1}",
    "matches a digit (equivalent to {1})": "matches a digit (equivalent to {1})",
    "matches a digit {1} (also written as {2})": "matches a digit {1} (also written as {2})",
    "matches a digit zero through nine in any script except ideographic scripts": "matches a digit zero through nine in any script except ideographic scripts",
    "matches a digit zero through nine in any script except ideographic scripts (equivalent to {1})": "matches a digit zero through nine in any script except ideographic scripts (equivalent to {1})",
    "matches a form-feed character {1}": "matches a form-feed character {1}",
    "matches a hexadecimal digit {1}": "matches a hexadecimal digit {1}",
    "matches a letter or ideograph that does not have lowercase and uppercase variants": "matches a letter or ideograph that does not have lowercase and uppercase variants",
    "matches a letter that appears at the start of a word when only the first letter of the word is capitalized": "matches a letter that appears at the start of a word when only the first letter of the word is capitalized",
    "matches a letter that exists in lowercase and uppercase variants (combination of {1}, {2} and {3})": "matches a letter that exists in lowercase and uppercase variants (combination of {1}, {2} and {3})",
    "matches a line separator character {1}": "matches a line separator character {1}",
    "matches a line-feed (newline) character {1}": "matches a line-feed (newline) character {1}",
    "matches a lowercase letter {1}": "matches a lowercase letter {1}",
    "matches a lowercase letter that has an uppercase variant": "matches a lowercase letter that has an uppercase variant",
    "Matches a newline character": "Matches a newline character",
    "Matches a null character, most often visually represented in unicode using U+2400.": "Matches a null character, most often visually represented in unicode using U+2400.",
    "matches a number that looks like a letter, such as a Roman numeral": "matches a number that looks like a letter, such as a Roman numeral",
    "matches a paragraph separator character {1}": "matches a paragraph separator character {1}",
    "matches a punctuation character {1}": "matches a punctuation character {1}",
    "matches a punctuation character such as an underscore that connects words": "matches a punctuation character such as an underscore that connects words",
    "matches a single character in the list": "matches a single character in the list",
    "matches a single character in the range between {1} {2} and {3} {4} ({5})": "matches a single character in the range between {1} {2} and {3} {4} ({5})",
    "matches a special character that is used like a letter": "matches a special character that is used like a letter",
    "matches a superscript or subscript digit, or a number that is not a digit (excluding numbers from ideographic scripts)": "matches a superscript or subscript digit, or a number that is not a digit (excluding numbers from ideographic scripts)",
    "matches a tab character {1}": "matches a tab character {1}",
    "Matches a tab character. Historically, tab stops happen every 8 characters.": "Matches a tab character. Historically, tab stops happen every 8 characters.",
    "Matches a unicode character outside of the given property.": "Matches a unicode character outside of the given property.",
    "Matches a unicode character that doesn't have any of the given properties.": "Matches a unicode character that doesn't have any of the given properties.",
    "Matches a unicode character with the given group of properties or categories:": "Matches a unicode character with the given group of properties or categories:",
    "Matches a unicode character with the given property:": "Matches a unicode character with the given property:",
    "matches a uppercase letter {1}": "matches a uppercase letter {1}",
    "matches a vertical tab character": "matches a vertical tab character",
    "matches a visible character {1}": "matches a visible character {1}",
    "matches a visible character or the space character {1}": "matches a visible character or the space character {1}",
    "matches a whitespace character that is invisible, but does take up space": "matches a whitespace character that is invisible, but does take up space",
    "matches a whitespace character, excluding line breaks {1}": "matches a whitespace character, excluding line breaks {1}",
    "matches a whitespace character, including a line break {1} (also written as {2})": "matches a whitespace character, including a line break {1} (also written as {2})",
    "Matches an `a` character or nothing.": "Matches an `a` character or nothing.",
    "matches an ASCII {1} or Latin-1 {2} control character": "matches an ASCII {1} or Latin-1 {2} control character",
    "matches an empty string (any position)": "matches an empty string (any position)",
    "matches an uppercase letter that has a lowercase variant": "matches an uppercase letter that has a lowercase variant",
    "matches any character {1}": "matches any character {1}",
    "Matches any character except for an a, b or c": "Matches any character except for an a, b or c",
    "Matches any character in the valid ASCII range. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches any character in the valid ASCII range. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches any character other than newline (or including line terminators with the {1} flag)": "Matches any character other than newline (or including line terminators with the {1} flag)",
    "Matches any character that is not a newline, the opposite of {1}. Not affected by the single line {2} flag.": "Matches any character that is not a newline, the opposite of {1}. Not affected by the single line {2} flag.",
    "Matches any character that is not horizontal whitespace {1}.": "Matches any character that is not horizontal whitespace {1}.",
    "matches any character that's not a digit (equivalent to {1})": "matches any character that's not a digit (equivalent to {1})",
    "matches any character that's not a horizontal whitespace character": "matches any character that's not a horizontal whitespace character",
    "matches any character that's not a vertical whitespace character": "matches any character that's not a vertical whitespace character",
    "matches any character, including newline": "matches any character, including newline",
    "matches any character, including unicode {1}": "matches any character, including unicode {1}",
    "Matches any characters between a and z, including a and z.": "Matches any characters between a and z, including a and z.",
    "Matches any characters between a-z or A-Z. You can combine as much as you please.": "Matches any characters between a-z or A-Z. You can combine as much as you please.",
    "Matches any characters except those in the range a-z.": "Matches any characters except those in the range a-z.",
    "matches any characters in the {1} {2}": "matches any characters in the {1} {2}",
    "matches any characters that {1} does not": "matches any characters that {1} does not",
    "matches any code point reserved for private use": "matches any code point reserved for private use",
    "matches any code point to which no character has been assigned": "matches any code point to which no character has been assigned",
    "matches any currency sign": "matches any currency sign",
    "Matches any decimal digit. Equivalent to {1}.": "Matches any decimal digit. Equivalent to {1}.",
    "matches any horizontal whitespace character (equivalent to {1})": "matches any horizontal whitespace character (equivalent to {1})",
    "matches any kind of closing bracket": "matches any kind of closing bracket",
    "matches any kind of closing quote": "matches any kind of closing quote",
    "matches any kind of hyphen or dash": "matches any kind of hyphen or dash",
    "matches any kind of invisible character (equivalent to {1})": "matches any kind of invisible character (equivalent to {1})",
    "matches any kind of letter from any language": "matches any kind of letter from any language",
    "matches any kind of numeric character in any script": "matches any kind of numeric character in any script",
    "matches any kind of opening bracket": "matches any kind of opening bracket",
    "matches any kind of opening quote": "matches any kind of opening quote",
    "matches any kind of punctuation character": "matches any kind of punctuation character",
    "matches any kind of punctuation character that is not a dash, bracket, quote or connector": "matches any kind of punctuation character that is not a dash, bracket, quote or connector",
    "matches any kind of visible character (equivalent to {1})": "matches any kind of visible character (equivalent to {1})",
    "matches any kind of whitespace or invisible separator": "matches any kind of whitespace or invisible separator",
    "Matches any letter, digit or underscore. Equivalent to {1}.": "Matches any letter, digit or underscore. Equivalent to {1}.",
    "matches any math symbols, currency signs, dingbats, box-drawing characters, etc": "matches any math symbols, currency signs, dingbats, box-drawing characters, etc",
    "matches any mathematical symbol": "matches any mathematical symbol",
    "matches any non-newline character": "matches any non-newline character",
    "matches any non-numeric character in any script (equivalent to {1})": "matches any non-numeric character in any script (equivalent to {1})",
    "matches any non-whitespace character (equivalent to {1})": "matches any non-whitespace character (equivalent to {1})",
    "matches any non-word character (equivalent to {1})": "matches any non-word character (equivalent to {1})",
    "matches any number of Unicode characters that form an extended Unicode sequence": "matches any number of Unicode characters that form an extended Unicode sequence",
    "Matches any space, tab or newline character.": "Matches any space, tab or newline character.",
    "matches any Unicode newline sequence": "matches any Unicode newline sequence",
    "Matches any Unicode newline sequence. Equivalent to (?>\\r\\n|\\n|\\x0b|\\f|\\r|\\x85).": "Matches any Unicode newline sequence. Equivalent to (?>\\r\\n|\\n|\\x0b|\\f|\\r|\\x85).",
    "Matches any valid Unicode sequence, including line breaks. Equivalent to {1}.": "Matches any valid Unicode sequence, including line breaks. Equivalent to {1}.",
    "matches any vertical whitespace character": "matches any vertical whitespace character",
    "matches any whitespace character (equivalent to {1})": "matches any whitespace character (equivalent to {1})",
    "matches any word character (equivalent to {1})": "matches any word character (equivalent to {1})",
    "Matches anything not matched by {1}.": "Matches anything not matched by {1}.",
    "Matches anything other than a decimal/digit.": "Matches anything other than a decimal/digit.",
    "Matches anything other than a letter, digit or underscore. Equivalent to {1}": "Matches anything other than a letter, digit or underscore. Equivalent to {1}",
    "Matches anything other than a space, tab or newline.": "Matches anything other than a space, tab or newline.",
    "Matches as few characters as possible.": "Matches as few characters as possible.",
    "Matches as many characters as possible; backtracking can't reduce the number of characters matched. Because it is greedy, it will match all the way to the last digit, leaving nothing else for the {1} to match. Without backtracking, this regex fails to produce a match.": "Matches as many characters as possible; backtracking can't reduce the number of characters matched. Because it is greedy, it will match all the way to the last digit, leaving nothing else for the {1} to match. Without backtracking, this regex fails to produce a match.",
    "Matches as many characters as possible.": "Matches as many characters as possible.",
    "Matches ASCII characters typically associated with Control+A through Control+Z: \\x01 through \\x1A.": "Matches ASCII characters typically associated with Control+A through Control+Z: \\x01 through \\x1A.",
    "Matches at least 3 consecutive `a` characters.": "Matches at least 3 consecutive `a` characters.",
    "Matches between 3 and 6 (inclusive) consecutive `a` characters.": "Matches between 3 and 6 (inclusive) consecutive `a` characters.",
    "Matches characters that are not whitespace, letters or numbers. The double square brackets is not a typo, POSIX notation demands it.": "Matches characters that are not whitespace, letters or numbers. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches characters that are often used to control text presentation, including newlines, null characters, tabs and the escape character. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches characters that are often used to control text presentation, including newlines, null characters, tabs and the escape character. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches decimal digits. Equivalent to {1} or {2}. The double square brackets is not a typo, POSIX notation demands it.": "Matches decimal digits. Equivalent to {1} or {2}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches either an a, b or c character": "Matches either an a, b or c character",
    "Matches either what is before the {1} or what is after it - in this case `a` or `b`.": "Matches either what is before the {1} or what is after it - in this case `a` or `b`.",
    "Matches end of word (POSIX syntax), equivalent to {1}": "Matches end of word (POSIX syntax), equivalent to {1}",
    "matches esc {1}": "matches esc {1}",
    "Matches exactly 3 consecutive `a` characters.": "Matches exactly 3 consecutive `a` characters.",
    "Matches exactly one data unit of input. Can match individual bytes in UTF-8 mode, leading to undefined behaviour if a search starts inside a character.": "Matches exactly one data unit of input. Can match individual bytes in UTF-8 mode, leading to undefined behaviour if a search starts inside a character.",
    "Matches hexadecimal digits, case insensitive. Equivalent to {1}.": "Matches hexadecimal digits, case insensitive. Equivalent to {1}.",
    "matches invisible control characters and unused code points": "matches invisible control characters and unused code points",
    "matches invisible formatting indicator": "matches invisible formatting indicator",
    "Matches letters, numbers and underscores. Equivalent to {1} or {2}. The double square brackets is not a typo, POSIX notation demands it.": "Matches letters, numbers and underscores. Equivalent to {1} or {2}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches lowercase letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches lowercase letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "matches one data unit, even in UTF mode (best avoided)": "matches one data unit, even in UTF mode (best avoided)",
    "matches one half of a surrogate pair in {1} encoding": "matches one half of a surrogate pair in {1} encoding",
    "Matches one or more consecutive `a` characters.": "Matches one or more consecutive `a` characters.",
    "Matches printable characters, part of the basic latin set, such as letters and spaces, without including control characters. The double square brackets is not a typo, POSIX notation demands it.": "Matches printable characters, part of the basic latin set, such as letters and spaces, without including control characters. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches printable, non-whitespace, non-control characters only. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches printable, non-whitespace, non-control characters only. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches spaces and tabs (but not newlines). Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches spaces and tabs (but not newlines). Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches spaces, tabs, non-breaking/mathematical/ideographic spaces, and so on. Works with Unicode.": "Matches spaces, tabs, non-breaking/mathematical/ideographic spaces, and so on. Works with Unicode.",
    "Matches start of word (POSIX syntax), equivalent to {1}": "Matches start of word (POSIX syntax), equivalent to {1}",
    "Matches text the nth group matched and captured. `n` represents the capture group number and can positionally refer to past capture groups as well.": "Matches text the nth group matched and captured. `n` represents the capture group number and can positionally refer to past capture groups as well.",
    "Matches the 16-bit character with the given hex value.": "Matches the 16-bit character with the given hex value.",
    "Matches the 8-bit character with the given hex value.": "Matches the 8-bit character with the given hex value.",
    "Matches the 8-bit character with the given octal value.": "Matches the 8-bit character with the given octal value.",
    "Matches the backspace control character. {1} stands for `word boundary` when outside of a character class {2}.": "Matches the backspace control character. {1} stands for `word boundary` when outside of a character class {2}.",
    "matches the bell character {1}": "matches the bell character {1}",
    "matches the character {1} with index {2} ({3} or {4}) literally ({5})": "matches the character {1} with index {2} ({3} or {4}) literally ({5})",
    "matches the characters {1} literally ({2})": "matches the characters {1} literally ({2})",
    "matches the control sequence {1} {2}": "matches the control sequence {1} {2}",
    "Matches the end of a string only. Unlike {1}, this is not affected by multiline mode, and, in contrast to {2}, will not match before a trailing newline at the end of a string.": "Matches the end of a string only. Unlike {1}, this is not affected by multiline mode, and, in contrast to {2}, will not match before a trailing newline at the end of a string.",
    "Matches the end of a string only. Unlike {1}, this is not affected by multiline mode.": "Matches the end of a string only. Unlike {1}, this is not affected by multiline mode.",
    "Matches the end of a string without consuming any characters. If multiline mode is used, this will also match immediately before a newline character.": "Matches the end of a string without consuming any characters. If multiline mode is used, this will also match immediately before a newline character.",
    "Matches the intersection between the two character classes. Useful if you want to white or blacklist certain characters from a broader class.": "Matches the intersection between the two character classes. Useful if you want to white or blacklist certain characters from a broader class.",
    "matches the intersection of the tokens to the left and right of this token": "matches the intersection of the tokens to the left and right of this token",
    "Matches the longest possible substring in the group and doesn't allow later backtracking to reevaluate the group. It is not a capturing group.": "Matches the longest possible substring in the group and doesn't allow later backtracking to reevaluate the group. It is not a capturing group.",
    "matches the negation of {1}": "matches the negation of {1}",
    "matches the previous token between {1} and {2} times, {3} {4}": "matches the previous token between {1} and {2} times, {3} {4}",
    "matches the previous token exactly {1} {2} {3}": "matches the previous token exactly {1} {2} {3}",
    "Matches the same text a capture group called `name` matched and captured. Alternate notations are {1} and {2}. Valid for .NET.": "Matches the same text a capture group called `name` matched and captured. Alternate notations are {1} and {2}. Valid for .NET.",
    "matches the same text as most recently matched by the {1} capturing group": "matches the same text as most recently matched by the {1} capturing group",
    "matches the same text as most recently matched by the capturing group named {1}": "matches the same text as most recently matched by the capturing group named {1}",
    "matches the same text as most recently matched by the entire pattern": "matches the same text as most recently matched by the entire pattern",
    "Matches the same text capture group called `letter` matched and captured.": "Matches the same text capture group called `letter` matched and captured.",
    "Matches the same text matched and captured by a previously named capture group.": "Matches the same text matched and captured by a previously named capture group.",
    "Matches the same text matched by a previously named capture group.": "Matches the same text matched by a previously named capture group.",
    "Matches the same text the nth group prior to {1} matched and captured.": "Matches the same text the nth group prior to {1} matched and captured.",
    "Matches the start of a string only. Unlike {1}, this is not affected by multiline mode.": "Matches the start of a string only. Unlike {1}, this is not affected by multiline mode.",
    "Matches the start of a string without consuming any characters. If {1} multiline mode is used, this will also match immediately after a newline character.": "Matches the start of a string without consuming any characters. If {1} multiline mode is used, this will also match immediately after a newline character.",
    "Matches the text captured by the nth group. n can contain more than one digit, if necessary.": "Matches the text captured by the nth group. n can contain more than one digit, if necessary.",
    "Matches the unicode character with the given hex value. When using the `/u` flag, 16-bit character (surrogate/supplementary characters included) syntax becomes `\\u{...}`.": "Matches the unicode character with the given hex value. When using the `/u` flag, 16-bit character (surrogate/supplementary characters included) syntax becomes `\\u{...}`.",
    "Matches unicode vertical whitespace, considered a character class by the PCRE engine: {1}.": "Matches unicode vertical whitespace, considered a character class by the PCRE engine: {1}.",
    "Matches uppercase letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches uppercase letters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "matches various symbols that are not math symbols, currency signs, or combining characters": "matches various symbols that are not math symbols, currency signs, or combining characters",
    "Matches whitespace characters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.": "Matches whitespace characters. Equivalent to {1}. The double square brackets is not a typo, POSIX notation demands it.",
    "Matches zero or more consecutive `a` characters.": "Matches zero or more consecutive `a` characters.",
    "Matches, without consuming any characters, at the position between two characters matched by {1} or {2}.": "Matches, without consuming any characters, at the position between two characters matched by {1} or {2}.",
    "Matches, without consuming any characters, immediately between a character matched by {1} and a character not matched by {1} (in either order). It cannot be used to separate non words from words.": "Matches, without consuming any characters, immediately between a character matched by {1} and a character not matched by {1} (in either order). It cannot be used to separate non words from words.",
    "Max Execution Time": "Temps d'exécution maximal",
    "May only be used to define functions. No matching is done in this group.": "Utilisé uniquement pour définir des fonctions. Aucune correspondance n'est effectuée dans ce groupe.",
    "meaningless quantifier": "quantificateur inutile",
    "Meta Escape": "Meta Escape",
    "Meta Sequences": "Meta Sequences",
    "Modifier": "Modifier",
    "Most Points": "Most Points",
    "Most Recent": "Most Recent",
    "Move down": "Déplacer vers le bas",
    "Move up": "Déplacer vers le haut",
    "Multiline": "Multiligne",
    "My Expressions": "Mes Expressions",
    "My Favorites": "Mes favoris",
    "My Library Entries": "Mes ajouts dans la bibliotèque",
    "My Regular Expressions": "Mes expressions régulières",
    "Name or other identifier of the author": "Nom ou autre identificateur de l'auteur",
    "Named backreference may not be used before group definition": "Named backreference may not be used before group definition",
    "Named Capture Group {1}": "Groupe de capture nommé {1}",
    "Named capture groups can be called via {1}": "Les groupes de capture nommés peuvent être appelés via {1}",
    "Named Capturing Group": "Groupe de capture nommé",
    "Negation of \\h": "Inverse de \\h",
    "Negation of \\p": "Inverse de \\p",
    "Negation of \\pX": "Inverse de \\pX",
    "Negation of \\v": "Negation of \\v",
    "Negative Lookahead": "Préanalyse négative",
    "Negative Lookbehind": "Postanalyse négative",
    "Nested character classes act as boolean OR, equivalent to simply using {1}": "Nested character classes act as boolean OR, equivalent to simply using {1}",
    "Newline": "Nouvelle Ligne",
    "Next page": "Next page",
    "Next question": "Next question",
    "No data": "No data",
    "No data captured during the debug process.": "No data captured during the debug process.",
    "no description available": "description indisponible",
    "No hex code was specified": "Aucun code hexadécimal n'a été spécifié",
    "No Internet Connection": "Pas de connexion Internet",
    "No Match": "Aucune Concordance",
    "No match groups were extracted.": "Aucun groupe de correspondance n'a été extrait.",
    "No result": "No result",
    "Non-atomic Positive Lookahead": "Non-atomic Positive Lookahead",
    "Non-atomic Positive Lookbehind": "Non-atomic Positive Lookbehind",
    "Non-capturing group": "Groupe non-capturant",
    "Non-capturing group that discards backtracking positions once matched.": "Non-capturing group that discards backtracking positions once matched.",
    "Non-capturing Group. Matches the tokens contained with the following effective flags: {1}": "Non-capturing Group. Matches the tokens contained with the following effective flags: {1}",
    "Non-word boundary": "Limite non-mot",
    "not": "not",
    "Note that {1} is wrapped in a superfluous capture group to help visually identify its match in the example string.": "Note that {1} is wrapped in a superfluous capture group to help visually identify its match in the example string.",
    "Note that clicking any of the links above will refresh the page. Your data will be saved to local storage and restored once you return to the website.": "Note that clicking any of the links above will refresh the page. Your data will be saved to local storage and restored once you return to the website.",
    "Note that this feature is not yet supported on all browsers; use at your own discretion!": "Note that this feature is not yet supported on all browsers; use at your own discretion!",
    "Note: for Python 2.7 compatibility, use ur{1}{2} to prefix the regex and u\"\" to prefix the test string and substitution.": "Note : pour assurer la compatibilité avec Python 2.7, utiliser ur{1}{2} comme préfixe d'expression régulière, et u\"\" comme préfixe de chaîne de test et de substitution.",
    "Nothing to preview": "Aucun aperçu disponible",
    "Null character": "Caractère Null",
    "Octal": "Octal",
    "Octal character ddd": "Caractère octal ddd",
    "Octal Character Table": "Table de caractères octaux",
    "Ok": "OK",
    "Once `(?1)` is called, `(?(R1)true|false)` will return true since capture group 1 was called, and will match `ction`": "Once `(?1)` is called, `(?(R1)true|false)` will return true since capture group 1 was called, and will match `ction`",
    "Once we recursively call `(?&sub1)` the conditional will return true as `(?<sub1>)` finished matching, thus `ction` will match.": "Once we recursively call `(?&sub1)` the conditional will return true as `(?<sub1>)` finished matching, thus `ction` will match.",
    "Once you have solved each task, you will be presented with statistics over how well others have done in that task, and the next task will be made available to you.": "Once you have solved each task, you will be presented with statistics over how well others have done in that task, and the next task will be made available to you.",
    "one": "un",
    "One or more of a": "Un ou plus de",
    "Only the bare minimum information is retrieved and saved in order to identify your account.": "Only the bare minimum information is retrieved and saved in order to identify your account.",
    "Open code generator": "Open code generator",
    "Open regex debugger": "Open regex debugger",
    "Open regex in editor": "Ouvrir l'expression régulière dans l'éditeur",
    "optional": "optional",
    "or": "or",
    "Order By": "Trier Par",
    "Parsing HTML with regex is seldom a good idea, despite there being a task in the quiz to do just that.": "Parsing HTML with regex is seldom a good idea, despite there being a task in the quiz to do just that.",
    "Pattern Backtrack Indicator": "Pattern Backtrack Indicator",
    "Pattern Error": "Erreur d'expression",
    "Pattern may not end with a trailing backslash": "L'expression ne doit pas se terminer avec un antislash",
    "Pattern modifier": "Modificateur d'expression",
    "Pattern strings will be treated as UTF-16, which means that unicode characters will also be included in {1} ranges, and in escape sequences like {2}.": "Pattern strings will be treated as UTF-16, which means that unicode characters will also be included in {1} ranges, and in escape sequences like {2}.",
    "Pause": "Pause",
    "PCRE equivalent is {1}.": "PCRE equivalent is {1}.",
    "Plain Text": "Plain Text",
    "Play": "Play",
    "Please {1} by clicking the link or the button in the left sidebar.": "Please {1} by clicking the link or the button in the left sidebar.",
    "Please enable JavaScript to use this web application.": "Veuillez activer JavaScript pour utiliser cette application.",
    "Please keep in mind that these code samples are automatically generated and are not guaranteed to work. If you find any syntax errors, feel free to submit a bug report.": "Veuillez garder à l'esprit que ces examples de codes sont générés automatiquement, il n'est pas garantie qu'il fonctionne. Si vous trouvez une erreur, vous pouvez reporter un bug.",
    "Please note this feature is experimental in JavaScript and might not be supported by your browser.": "Cette fonctionnalité est expérimentale en JavaScript et peut ne pas être prise en charge par votre navigateur.",
    "Please wait while the app is loading...": "Veuillez patienter pendant que l'application se charge...",
    "Please wait while your expression is being debugged...": "Veuillez patienter le temps que votre expression est en débogage...",
    "Please wait while your request is being processed...": "Please wait while your request is being processed...",
    "Positive Lookahead": "Préanalyse positive",
    "Positive Lookbehind": "Postanalyse positive",
    "Posix Class": "Posix Class",
    "POSIX Word Boundaries must be the only item inside a character class": "POSIX Word Boundaries must be the only item inside a character class",
    "possessive": "possessif",
    "Possessive quantifier": "Quantificateur possessif",
    "Pre-define patterns before using them": "Pre-define patterns before using them",
    "Press {1} to copy": "Appuyez sur {1} pour copier",
    "Preview": "Aperçu",
    "Previous page": "Previous page",
    "Print the match result": "Afficher le résultat de la correspondance",
    "Print the result of the substitution": "Afficher le résultat de la substitution",
    "Processing...": "Traitement...",
    "Quantifier": "Quantificateur",
    "Quantifier range is too large": "L'intervalle de quantificateur est trop grand",
    "Quantifiers": "Quantificateurs",
    "Quick Reference": "Référence Rapide",
    "Quiz Submission Score": "Quiz Submission Score",
    "Quote": "Quote",
    "Quote; treat as literals": "Quote; treat as literals",
    "Range": "Range",
    "Recurse entire pattern": "Effectuer une récursivité sur l'expression entière",
    "Recurse first relative subpattern": "Recurse first relative subpattern",
    "Recurse first subpattern": "Recurse first subpattern",
    "Recurse named capture group `letter`": "Recurse named capture group `letter`",
    "Recurse nth capture group": "Recurse nth capture group",
    "Recurse nth capture group ahead of the current position of {1}. For example {2} is the second previous capture group.": "Recurse nth capture group ahead of the current position of {1}. For example {2} is the second previous capture group.",
    "Recurse nth capture group ahead of the current position of {1}. For example, {2} is the second upcoming capture group.": "Recurse nth capture group ahead of the current position of {1}. For example, {2} is the second upcoming capture group.",
    "Recurse nth capture group.": "Recurse nth capture group.",
    "Recurse nth capture group. `n` can be positional as well. For example, {1} stands for previous capture group, while {2} would be the third capture group. Equivalent to {3}.": "Recurse nth capture group. `n` can be positional as well. For example, {1} stands for previous capture group, while {2} would be the third capture group. Equivalent to {3}.",
    "Recurse nth capture group. `n` can be positional as well. For example, {1} stands for the previous capture group, while {2} would be the third next capture group. Equivalent to {3}": "Recurse nth capture group. `n` can be positional as well. For example, {1} stands for the previous capture group, while {2} would be the third next capture group. Equivalent to {3}",
    "Recurse nth relative upcoming subpattern": "Recurse nth relative upcoming subpattern",
    "Recurse subpattern `name`": "Recurse subpattern `name`",
    "Recurse subpattern called `name`": "Recurse subpattern called `name`",
    "Recurse the capture group called \"letter\". This is an alternative notation for {1}": "Recurse the capture group called \"letter\". This is an alternative notation for {1}",
    "Recurse the capture group called `letter`.": "Recurse the capture group called `letter`.",
    "Recurse the first capture group following the current position in the expression. {1} is the second capture group, {2} is the capture group immediately preceding the current position.": "Recurse the first capture group following the current position in the expression. {1} is the second capture group, {2} is the capture group immediately preceding the current position.",
    "recurses the {1} subpattern": "recurses the {1} subpattern",
    "recurses the entire pattern": "effectue une récursivité sur l'expression entière",
    "recurses the subpattern named {1}": "recurses the subpattern named {1}",
    "Recursive Conditional statement": "Instruction conditionnelle récursive",
    "Recursively match the entire expression. Equivalent to {1} or {2}.": "Recursively match the entire expression. Equivalent to {1} or {2}.",
    "Recursively match the first capture group.": "Recursively match the first capture group.",
    "Recursively matches the given capture group by name. It does not require that the capture group be defined beforehand.": "Recursively matches the given capture group by name. It does not require that the capture group be defined beforehand.",
    "Recursively matches the given named subpattern or capture group.": "Recursively matches the given named subpattern or capture group.",
    "regex": "expression régulière",
    "Regex Debugger": "Débugueur de regex",
    "Regex Editor": "Editeur de regex",
    "Regex engine modifier": "Modificateur de moteur d'expression régulières",
    "Regex Flags": "Regex Flags",
    "Regex Library": "Bibliotèque regex",
    "regex quiz": "regex quiz",
    "Regex Quiz": "Regex Quiz",
    "RegEx Score (lower is better)": "RegEx Score (lower is better)",
    "Regex Versions": "Versions d'expressions régulières",
    "Regex will continue parsing the string keeping in mind the last match location. If the next match is not located directly after the last, this next match is discarded.": "Regex will continue parsing the string keeping in mind the last match location. If the next match is not located directly after the last, this next match is discarded.",
    "Regex101 only supports inline modifiers to be placed at the start of the regex for python (which is also best practice)": "Regex101 only supports inline modifiers to be placed at the start of the regex for python (which is also best practice)",
    "Regular Expression": "Expression Régulière",
    "Relevance": "Pertinence",
    "Remove from favorites": "Supprimer des favoris",
    "Replaces the text conditionally depending on if the {1} matched": "Replaces the text conditionally depending on if the {1} matched",
    "Reset match": "Réinitialiser la correspondance",
    "resets the starting point of the reported match. Any previously consumed characters are no longer included in the final match": "resets the starting point of the reported match. Any previously consumed characters are no longer included in the final match",
    "Restrict matches to ASCII only": "Restreindre les correspondances aux caractères ASCII uniquement",
    "Result": "Result",
    "result will be a String with the substituted value": "le résultat sera une chaîne de caractères avec la valeur substituée",
    "result will be a tuple containing the start and end indices for the first match in the string": "le résultat sera un tuple contenant les positions de début et de fin de la première correspondance dans la chaîne de caractères",
    "result will be an iterator over tuples containing the start and end indices for each match in the string": "le résultat sera un itérateur de tuples contenant les positions de début et de fin de la première correspondance dans la chaîne de caractères",
    "Returns a string with the full match result. `0` can be replaced with any desired capture group ID to return that part of the match instead.": "Returns a string with the full match result. `0` can be replaced with any desired capture group ID to return that part of the match instead.",
    "Run tests": "Lancer les tests",
    "Run unit tests (when view is open)": "Run unit tests (when view is open)",
    "Save": "Sauvegarder",
    "Save & Share": "Sauvegarder et partager",
    "Save Regex": "Sauvegarder l'expression régulière",
    "Save Regular Expression": "Sauvegarder l'expression régulière",
    "Saving settings...": "Saving settings...",
    "script": "script",
    "script extension": "script extension",
    "Search library": "Search library",
    "Search reference": "Rechercher une référence",
    "Seek one step backwards": "Seek one step backwards",
    "Seek one step forward": "Seek one step forward",
    "Select a service provider": "Select a service provider",
    "Select assertion": "Select assertion",
    "Select Regex Version": "Choisir la version de l'expression régulière",
    "Select target": "Select target",
    "Select the flavor you want to use when the site loads. Note: a saved entry's flavor will override this": "Select the flavor you want to use when the site loads. Note: a saved entry's flavor will override this",
    "Send me an email": "Envoyez-moi un email",
    "Separates the true and false case of the parent conditional.": "Separates the true and false case of the parent conditional.",
    "Set Regex Options": "Ajuster les options d'expression régulière",
    "Sets the convention for newline matching to {1}, {2}, or {3} for things like the {4} metacharacter.": "Sets the convention for newline matching to {1}, {2}, or {3} for things like the {4} metacharacter.",
    "Sets the given position in the regex as the new start of the match. Nothing preceding {1} will be returned as part of the full match.": "Sets the given position in the regex as the new start of the match. Nothing preceding {1} will be returned as part of the full match.",
    "sets the property mode to {1}": "sets the property mode to {1}",
    "sets the property mode to Unicode": "sets the property mode to Unicode",
    "Settings": "Préférences",
    "Shortcut": "Shortcut",
    "shorthand for {1}": "raccourci de {1}",
    "Show how many steps a regular expression takes to evaluate": "Show how many steps a regular expression takes to evaluate",
    "Show informative and helpful tooltips when hovering tokens in the regex editor": "Afficher des infobulles utiles lorsque le pointeur survole des jetons dans l'éditeur d'expressions régulières",
    "Show Line Numbers in Regex Editor": "Afficher les numéros de ligne dans l'éditeur d'expressions régulières",
    "Show Line Numbers in Test String Editor and Substitution Result": "Afficher les numéros de ligne dans l'éditeur de chaînes de test et dans les résultats de substitution",
    "Show Sidebar": "Montrer la Sidebar",
    "Show tooltips": "Afficher les infobulles",
    "Show warning popup when trying to leave site with unsaved data": "Show warning popup when trying to leave site with unsaved data",
    "Sign In": "Se connecter",
    "Sign out": "Se déconnecter",
    "Single line": "Ligne unique",
    "Space or tab only": "Espace ou tabulation uniquement",
    "specifies a newline convention: {1}, {2} or {3}": "specifies a newline convention: {1}, {2} or {3}",
    "specifies a newline convention: {1}, {2} or {3} only": "specifies a newline convention: {1}, {2} or {3} only",
    "specifies a newline convention: {1}, followed by {2}": "specifies a newline convention: {1}, followed by {2}",
    "specifies a newline convention: all unicode newline sequences {1}": "specifies a newline convention: all unicode newline sequences {1}",
    "specifies a newline convention: any Unicode newline sequence": "specifies a newline convention: any Unicode newline sequence",
    "specifies a newline convention: carriage return": "specifies a newline convention: carriage return",
    "specifies a newline convention: line-feed": "specifies a newline convention: line-feed",
    "Sponsor": "Sponsor",
    "Sponsors": "Sponsors",
    "Start of match": "Début de correspondance",
    "Start of string": "Début de chaîne de caractères",
    "Start of word": "Début de mot",
    "Starting at the current position in the expression, ensures that the given pattern will not match. Does not consume characters.": "Starting at the current position in the expression, ensures that the given pattern will not match. Does not consume characters.",
    "starts with": "commence avec",
    "step": "pas",
    "steps": "pas",
    "Sticky - searches in strings only from the index of the last match": "Sticky - searches in strings only from the index of the last match",
    "Style": "Style",
    "Styling with Markdown is supported": "Vous pouvez stylisé avec des marqueurs",
    "Submit": "Envoyer",
    "Submit Workspace to Regex Library": "Submit Workspace to Regex Library",
    "Submitted by": "Submitted by",
    "subpattern {1}": "subpattern {1}",
    "Subpattern definition construct": "Subpattern definition construct",
    "Subpatterns declared within each alternative of this construct will start over from the same index.": "Subpatterns declared within each alternative of this construct will start over from the same index",
    "Subroutine": "Subroutine",
    "Substitution": "Substitution",
    "Substitution result": "Résultat de substitution",
    "Success": "Success",
    "suppresses the start-of-match optimizations that are otherwise run by Perl": "suppresses the start-of-match optimizations that are otherwise run by Perl",
    "Surrogate Pair": "Surrogate Pair",
    "Surrogate values are disallowed in Unicode mode": "Surrogate values are disallowed in Unicode mode",
    "Switch to regex list substitution": "Switch to regex list substitution",
    "Switch to regex matching": "Switch to regex matching",
    "Switch to regex substitution": "Switch to regex substitution",
    "Switch to unit tests": "Switch to unit tests",
    "Tab": "Tabulation",
    "Tags": "Tags",
    "Task {1}": "Task {1}",
    "Task Statistics": "Task Statistics",
    "Tasks": "Tasks",
    "Terminate any Transformation": "Terminate any Transformation",
    "Terminates any of the previous {1} (uppercase) or {2} (lowercase) transformations. This is a feature only available on regex101.com.": "Terminates any of the previous {1} (uppercase) or {2} (lowercase) transformations. This is a feature only available on regex101.com.",
    "Terminates any previous text transformation (initiated with either \\U or \\L)": "Terminates any previous text transformation (initiated with either \\U or \\L)",
    "Test finished in {1}{2}": "Test finished in {1}{2}",
    "Test String": "Chaîne de test",
    "Test String Backtrack Indicator": "Test String Backtrack Indicator",
    "Text": "Text",
    "Thank you for your contribution": "Thank you for your contribution",
    "The {1} and {2} anchors now match at the beginning/end of each line respectively, instead of beginning/end of the entire string or input.": "The {1} and {2} anchors now match at the beginning/end of each line respectively, instead of beginning/end of the entire string or input.",
    "the above tag defines encoding for this document and is for Python 2.x compatibility": "the above tag defines encoding for this document and is for Python 2.x compatibility",
    "The character offset is too large": "Le décalage entre les caractères est trop grand",
    "The condition is invalid (you may be referencing a non-existent subpattern or group)": "The condition is invalid (you may be referencing a non-existent subpattern or group)",
    "The data can never be recovered again!": "The data can never be recovered again!",
    "The DEFINE group is completely ignored by regex. It gets treated as a var name=\"value\", whereas you can recall the specific pattern for use via its name. Multiple patterns can be defined in the same DEFINE group.": "The DEFINE group is completely ignored by regex. It gets treated as a var name=\"value\", whereas you can recall the specific pattern for use via its name. Multiple patterns can be defined in the same DEFINE group.",
    "The engine will per default do lazy matching, instead of greedy. This reverses the meaning of {1}, which will now make the previous quantifier greedy.": "The engine will per default do lazy matching, instead of greedy. This reverses the meaning of {1}, which will now make the previous quantifier greedy.",
    "The entry has automatically been added to your account which means you can at any time delete this entry, make it private and much much more.": "The entry has automatically been added to your account which means you can at any time delete this entry, make it private and much much more.",
    "The escape sequence to match backspace is not supported in the selected flavor": "The escape sequence to match backspace is not supported in the selected flavor",
    "The internal recursion limit was reached.": "The internal recursion limit was reached.",
    "The Java regex engine reached the maximum call stack size.": "The Java regex engine reached the maximum call stack size.",
    "The match was halted because the offset does not point to the beginning of a valid UTF-16 character.": "Le processus de correspondance a été arrêté car le décalage ne pointe pas au début d'une chaîne de caractères UTF-16 valide.",
    "The match was halted because your expression contains a recursive loop. This means either that the whole pattern, or a subpattern, has been called recursively for the second time at the same position in the subject string.": "The match was halted because your expression contains a recursive loop. This means either that the whole pattern, or a subpattern, has been called recursively for the second time at the same position in the subject string.",
    "The number following the backslash is too large": "The number following the backslash is too large",
    "The pattern is forced to become anchored at the start of the search or at the position of the last successful match, equivalent to a {1}.": "The pattern is forced to become anchored at the start of the search or at the position of the last successful match, equivalent to a {1}.",
    "The PCRE regex engine automatically applies some internal optimizations to regexes to avoid unnecessary backtracking. This modifier will disable that behavior, and thus the engine will backtrack until the previously matching instruction fails to do so.": "Le moteur d'expressions régulières PCRE applique automatiquement des optimisations à ces expressions afin d'éviter des références arrière inutiles. Ce modificateur désactivera ce comportement, le moteur va donc appliquer des références arrière jusqu'à ce que l'instruction correspondante précédente n'en trouve plus.",
    "The posix class is unknown/invalid": "La classe POSIX est inconnue ou invalide",
    "The preceding token is not quantifiable": "Le jeton précédent n'est pas quantifiable",
    "The quantifier range is out of order": "L'intervalle de valeurs du quantificateur est dans le mauvais ordre",
    "The quiz is divided into a number of different tasks, which each have a short description of the problem for you to solve.": "The quiz is divided into a number of different tasks, which each have a short description of the problem for you to solve.",
    "The quiz is evaluated using the PCRE2 engine, which is also available in the main editor if you would like to do some testing.": "The quiz is evaluated using the PCRE2 engine, which is also available in the main editor if you would like to do some testing.",
    "The range is invalid because either the left or right token is erroneous": "L'intervalle est invalide car le jeton de gauche ou le jeton de droite est erroné",
    "The range is invalid because the rightmost token is not rangeable": "L'intervalle est invalide car le jeton le plus à droite n'est pas utilisable dans un intervalle",
    "The regex debugger returned no data for the input you provided.": "Le débugueur de regex n'a retourné aucune donnée pour l'entrée que vous avez fourni.",
    "The regex debugger was unable to debug your pattern due to an error.": "Le débugueur de regex n'a pu débuguer votre expression à cause d'une erreur.",
    "The regex did not match the subject string.": "L'expression régulière n'a pas effectué de correspondances avec la chaîne de caractères.",
    "The regex engine returns match indices": "The regex engine returns match indices",
    "The result can be accessed through the `m`-variable.": "Le résultat peut être consulté à l'aide de la variable `m`.",
    "The result of the substitution is": "Le résultat de la substitution est",
    "the string": "la chaîne de caractères",
    "The substituted value will be contained in the result variable": "La valeur substituée sera contenue dans la variable result",
    "The tab key will by default switch to the next field in the tabbing order. If this option is disabled, input areas for regex, substitution and test string will instead consume the tab key.": "The tab key will by default switch to the next field in the tabbing order. If this option is disabled, input areas for regex, substitution and test string will instead consume the tab key.",
    "The tasks will get progressively harder, and you will receive less and less hand-holding the further you progress.": "The tasks will get progressively harder, and you will receive less and less hand-holding the further you progress.",
    "The token is incomplete": "Le jeton est incomplet",
    "The value specified is too large": "La valeur spécifiée est trop grande",
    "Theme": "Thème",
    "There are no unit tests, click {1} to add some.": "There are no unit tests, click {1} to add some.",
    "There are too many alternatives within the parent structure": "Trop d'alternatives sont présentes dans la structure parente",
    "There does not seem to be anything here": "On dirait qu'il n'y a rien ici",
    "There was a problem trying to fetch the library data. Please try again later.": "There was a problem trying to fetch the library data. Please try again later.",
    "There was a problem when trying to fetch the details for this entry. Please try again later.": "There was a problem when trying to fetch the details for this entry. Please try again later.",
    "There was a problem while trying to submit your regex to the library. Please try again later.": "There was a problem while trying to submit your regex to the library. Please try again later.",
    "There was an error fetching the quiz data. Please try again later.": "There was an error fetching the quiz data. Please try again later.",
    "There was an error querying the server, please try again later:": "There was an error querying the server, please try again later:",
    "There was an error trying to save your regex. Please try again later.": "Une erreur est survenue lors de la sauvegarde de l'expression régulière. Veuillez réessayer plus tard.",
    "There was an error while fetching your account data. Please try again later.": "Une erreur est survenue lors de la récupération de donné de votre compte. Veuillez réssayer plus tard.",
    "These flag modifiers act on the enclosed expression only. Equivalent to {1}": "These flag modifiers act on the enclosed expression only. Equivalent to {1}",
    "These flag modifiers act on the whole expression. You can also unset flags using a minus sign: {1}, and can combine setting and unsetting flags. {2} would set the single line flag and unset case insensitive.": "These flag modifiers act on the whole expression. You can also unset flags using a minus sign: {1}, and can combine setting and unsetting flags. {2} would set the single line flag and unset case insensitive.",
    "They are automatically saved as you change them and will be automatically loaded every time.": "Elles seront sauvegardées automatiquement tout au long des modifications effectuées, et seront chargées automatiquement à chaque fois.",
    "This allows regex to accept duplicate pattern names, however each capture group still has its own ID. Thus the two capture groups produce their own match instead of a single combined one.": "Ceci permet à l'expression régulière d'accepter des noms de groupes dupliqués, tout en assignant un identifiant unique à chaque groupe. Les deux groupes de capture produisent leurs propres correspondances, au lieu d'une seule fusionnée.",
    "This allows regex to treat the string as UTF-16, specifically.": "Ceci permet à l'expression régulière de traiter la chaîne de caractères en tant que chaîne UTF-16 spécifiquement.",
    "This allows regex to treat the string as UTF-32, specifically.": "Ceci permet à l'expression régulière de traiter la chaîne de caractères en tant que chaîne UTF-32 spécifiquement.",
    "This allows regex to treat the string as UTF-8, specifically.": "Ceci permet à l'expression régulière de traiter la chaîne de caractères en tant que chaîne UTF-8 spécifiquement.",
    "This allows regex to treat the string as UTF, be it 8, 16, or 32.": "Ceci permet à l'expression régulière de traiter la chaîne de caractères en tant que chaîne UTF-8, 16 ou 32.",
    "This capturing group can be referred to using the given name instead of a number.": "Cette construction de regroupement peut être référencée avec son nom, au lieu d'un nombre.",
    "This capturing group can be referred to using the given name instead of a number. Alternative notation for {1} and {2} when using a PCRE flavor.": "This capturing group can be referred to using the given name instead of a number. Alternative notation for {1} and {2} when using a PCRE flavor.",
    "This capturing group can be referred to using the given name instead of a number. Alternative notation for {1} or {2}.": "This capturing group can be referred to using the given name instead of a number. Alternative notation for {1} or {2}.",
    "This causes the regex to end successfully, skipping the rest of the pattern.": "Ceci termine l'expression régulière avec succès, en sautant le reste de l'expression.",
    "This enables the dot metacharacter {1} to also match newlines. The whole string is treated as a single line input.": "This enables the dot metacharacter {1} to also match newlines. The whole string is treated as a single line input.",
    "This flag does not exist in Python2, as by default your script is parsed in ascii mode. In Python3 this will behave as described.": "This flag does not exist in Python2, as by default your script is parsed in ascii mode. In Python3 this will behave as described.",
    "This flag tells the engine to ignore all whitespace and allow for comments in the regex; also called verbose. Comments are indicated by a starting \"#\"-character. If you need to include a space character in your regex, it must now be escaped '\\ '.": "This flag tells the engine to ignore all whitespace and allow for comments in the regex; also called verbose. Comments are indicated by a starting \"#\"-character. If you need to include a space character in your regex, it must now be escaped '\\ '.",
    "This generator only supports substitution. Please update your regular expression accordingly": "This generator only supports substitution. Please update your regular expression accordingly",
    "This indicates that your expression is not optimized for Java, and you are likely to run into similar issues in your Java code.": "This indicates that your expression is not optimized for Java, and you are likely to run into similar issues in your Java code.",
    "This is an alternate syntax for {1} or {2}.": "This is an alternate syntax for {1} or {2}.",
    "This is an interactive learning tool you can use to improve your understanding of regular expressions, and their different applications.": "This is an interactive learning tool you can use to improve your understanding of regular expressions, and their different applications.",
    "This is due to the fact that the regex engine is implemented using recursion, and is severely limited by it.": "This is due to the fact that the regex engine is implemented using recursion, and is severely limited by it.",
    "This is necessary to avoid infinite loops with zero-width matches": "This is necessary to avoid infinite loops with zero-width matches",
    "This may be an indication of catastrophic backtracking. To find out more and what this is, please read the following article:": "This may be an indication of catastrophic backtracking. To find out more and what this is, please read the following article:",
    "This may be useful in order to avoid ambiguity with octal characters.": "This may be useful in order to avoid ambiguity with octal characters.",
    "This means that your pattern did match but there were no capturing groups that matched anything in the subject string.": "This means that your pattern did match but there were no capturing groups that matched anything in the subject string.",
    "This notation is useful in avoiding ambiguity with octal characters, or when a literal number needs to be matched immediately after a {1} reference in the regex.": "This notation is useful in avoiding ambiguity with octal characters, or when a literal number needs to be matched immediately after a {1} reference in the regex.",
    "This POSIX equivalent of the \"\\b\" word boundary is interpreted as": "This POSIX equivalent of the \"\\b\" word boundary is interpreted as",
    "This POSIX equivalent of the {1} (word boundary) is interpreted as {2}": "This POSIX equivalent of the {1} (word boundary) is interpreted as {2}",
    "This script is unknown/invalid": "This script is unknown/invalid",
    "This sets the convention for newline matching to any unicode newline character or sequence thereof, for things like the {1} metacharacter.": "This sets the convention for newline matching to any unicode newline character or sequence thereof, for things like the {1} metacharacter.",
    "This setting affects how long the matcher will try to match your regex before it decides to give up": "This setting affects how long the matcher will try to match your regex before it decides to give up",
    "This setting determines whether groups in your regex, which did not match anything in the subject string, should be included in the results or not": "This setting determines whether groups in your regex, which did not match anything in the subject string, should be included in the results or not",
    "This token can not be used in a lookbehind due to either making it non-fixed width or interfering with the pattern matching": "This token can not be used in a lookbehind due to either making it non-fixed width or interfering with the pattern matching",
    "This token has no special meaning and has thus been rendered erroneous": "This token has no special meaning and has thus been rendered erroneous",
    "This token is not supported in the selected flavor": "This token is not supported in the selected flavor",
    "This token is not valid under strict mode, and may cause certain browsers to throw errors. If you need to reference this subpattern, use the {1} syntax, otherwise use the token literally.": "This token is not valid under strict mode, and may cause certain browsers to throw errors. If you need to reference this subpattern, use the {1} syntax, otherwise use the token literally.",
    "This token must be escaped when the {1} flag is enabled unless they form a valid quantifier": "This token must be escaped when the {1} flag is enabled unless they form a valid quantifier",
    "This token references a non-existent or invalid subpattern": "This token references a non-existent or invalid subpattern",
    "this verb causes the match to end successfully, skipping the remainder of the pattern": "this verb causes the match to end successfully, skipping the remainder of the pattern",
    "this verb causes the match to fail at the current starting position in the subject if the rest of the pattern does not match": "this verb causes the match to fail at the current starting position in the subject if the rest of the pattern does not match",
    "this verb disables the internal `auto-possessification` optimization in PCRE": "this verb disables the internal `auto-possessification` optimization in PCRE",
    "This verb does not allow regex to continue parsing after a matching failure, even if there are other matching strings ahead, and regardless of how many successful matches are before the failure.": "This verb does not allow regex to continue parsing after a matching failure, even if there are other matching strings ahead, and regardless of how many successful matches are before the failure.",
    "This verb is unknown or invalid": "This verb is unknown or invalid",
    "This verb must be placed at the start of the regex": "This verb must be placed at the start of the regex",
    "this verb sets the match limit (max iterations) for the pattern": "this verb sets the match limit (max iterations) for the pattern",
    "this verb sets the recursion limit (max depth) for the pattern": "this verb sets the recursion limit (max depth) for the pattern",
    "This will match only at the starting point of the search or the position the previous successful match ended. Useful with the {1} flag, or when you are only trying to match after a certain point in a string.": "This will match only at the starting point of the search or the position the previous successful match ended. Useful with the {1} flag, or when you are only trying to match after a certain point in a string.",
    "This will return a portion of the source string that follows the match.": "This will return a portion of the source string that follows the match.",
    "This will return a portion of the source string that precedes the match.": "This will return a portion of the source string that precedes the match.",
    "This will return a string with the complete match result from the regex.": "This will return a string with the complete match result from the regex.",
    "This will return a string with the contents from the capture group named `foo`. Any name can be used as long as it is defined in the regex. This syntax is made up and specific to only Regex101. If the J-flag is specified, content will be taken from the first capture group with the same name.": "This will return a string with the contents from the capture group named `foo`. Any name can be used as long as it is defined in the regex. This syntax is made up and specific to only Regex101. If the J-flag is specified, content will be taken from the first capture group with the same name.",
    "This will return a string with the contents from the first capture group. The number, in this case 1, can be any number as long as it corresponds to a valid capture group.": "This will return a string with the contents from the first capture group. The number, in this case 1, can be any number as long as it corresponds to a valid capture group.",
    "time": "time",
    "Timeout": "Timeout",
    "times": "times",
    "Title": "Titre",
    "Title of regular expression": "Title of regular expression",
    "To reduce ambiguity one may also use {1}, or {2} where `#` is a digit.": "To reduce ambiguity one may also use {1}, or {2} where `#` is a digit.",
    "Tools": "Tools",
    "Transforms text to lowercase until either end of string or a {1} token is encountered. This is a feature only available on regex101.com.": "Transforms text to lowercase until either end of string or a {1} token is encountered. This is a feature only available on regex101.com.",
    "Transforms text to uppercase until either the end of string or a {1} token is encountered. This is a feature only available on regex101.com.": "Transforms text to uppercase until either the end of string or a {1} token is encountered. This is a feature only available on regex101.com.",
    "Try launching the debugger to find out why.": "Try launching the debugger to find out why.",
    "UCP (Unicode Character Properties) makes the PCRE engine extend {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, and some POSIX character classes to include unicode characters as well, not just ASCII.": "UCP (Unicode Character Properties) makes the PCRE engine extend {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, and some POSIX character classes to include unicode characters as well, not just ASCII.",
    "Unable to fetch detailed task statistics. Please try again later.": "Unable to fetch detailed task statistics. Please try again later.",
    "Unable to fetch list of changes, please try again later": "Unable to fetch list of changes, please try again later",
    "Unable to fetch versions": "Unable to fetch versions",
    "Unable to initialize the regex engine! Please try to reload the web page. If the issue persists, please open an issue here: {1}": "Unable to initialize the regex engine! Please try to reload the web page. If the issue persists, please open an issue here: {1}",
    "Unable to save changes, please try again": "Unable to save changes, please try again",
    "Undescribed specific verb; No description for it yet (nothing's perfect)": "Undescribed specific verb; No description for it yet (nothing's perfect)",
    "Unfavorite Regex": "Unfavorite Regex",
    "Ungreedy": "Ungreedy",
    "Unicode": "Unicode",
    "Unicode case insensitive": "Unicode case insensitive",
    "Unicode Character Table": "Unicode Character Table",
    "Unicode newlines": "Unicode newlines",
    "Unicode Property": "Unicode Property",
    "Unicode property or script category": "Unicode property or script category",
    "Unicode property X": "Unicode property X",
    "Unit Tests": "Unit Tests",
    "Unit Tests {1}": "Unit Tests {1}",
    "unlimited": "unlimited",
    "Unmatched opening bracket": "Unmatched opening bracket",
    "Unmatched parenthesis": "Unmatched parenthesis",
    "untranslated string": "untranslated string",
    "Update": "Update",
    "Update Library Entry": "Update Library Entry",
    "Update Library Regex": "Update Library Regex",
    "Update Regex": "Update Regex",
    "Update Regular Expression": "Update Regular Expression",
    "uppercase": "uppercase",
    "Uppercase letters": "Uppercase letters",
    "Uppercase Transformation": "Uppercase Transformation",
    "Upvote": "Upvote",
    "Use the default behavior for the tab key": "Use the default behavior for the tab key",
    "Used to mark internal engine backtracking. When used in conjunction with the /K modifier (show backtracking control names), pcretest can return the mark together with a successful match. Equivalent to (*:NAME). `NAME` does not need to be unique.": "Used to mark internal engine backtracking. When used in conjunction with the /K modifier (show backtracking control names), pcretest can return the mark together with a successful match. Equivalent to (*:NAME). `NAME` does not need to be unique.",
    "User distribution (%)": "User distribution (%)",
    "Usually referred to as a `backreference`, this will match a repeat of the text matched and captured by the capture group # (number) specified.": "Usually referred to as a `backreference`, this will match a repeat of the text matched and captured by the capture group # (number) specified.",
    "Values below {1} are not recommended. Use at your own discretion": "Values below {1} are not recommended. Use at your own discretion",
    "Verb": "Verb",
    "verb synonymous with {1}. Forces a matching failure at the given position in the pattern": "verb synonymous with {1}. Forces a matching failure at the given position in the pattern",
    "Version {1}": "Version {1}",
    "Vertical Tab": "Vertical Tab",
    "Vertical whitespace character": "Vertical whitespace character",
    "View Explanation": "View Explanation",
    "View Match Information": "View Match Information",
    "View Regex Quick Reference": "View Regex Quick Reference",
    "Visible characters": "Visible characters",
    "Visible characters (not space)": "Visible characters (not space)",
    "Visible punctuation characters": "Visible punctuation characters",
    "Visualize whitespace and other special characters": "Visualize whitespace and other special characters",
    "Vote": "Vote",
    "Welcome to the regex101 regex quiz!": "Welcome to the regex101 regex quiz!",
    "What's new?": "What's new?",
    "Whats new?": "Whats new?",
    "Whitespace": "Whitespace",
    "Whole match is {1} and its start/end positions can be obtained via {2} and {3}": "Whole match is {1} and its start/end positions can be obtained via {2} and {3}",
    "Wiki": "Wiki",
    "Wiki (Info & FAQ)": "Wiki (Info & FAQ)",
    "with no special consideration for the \\r\\n sequence": "with no special consideration for the \\r\\n sequence",
    "Word characters": "Word characters",
    "Wrap Long Lines": "Wrap Long Lines",
    "Write": "Ecrire",
    "Yes, delete": "Yes, delete",
    "Yes, delete everything": "Yes, delete everything",
    "You also get a valuable feature set with regards to your data privacy, where you are given the ability to restrict who can view and edit the information you save.": "You also get a valuable feature set with regards to your data privacy, where you are given the ability to restrict who can view and edit the information you save.",
    "You can add titles and tags to organize your entries, as well as favorite any expressions.": "You can add titles and tags to organize your entries, as well as favorite any expressions.",
    "You can also unset flags using a minus sign: {1}, and can combine enabling and disabling flags. For example: {2} would set enable single line and disable case insensitive.": "You can also unset flags using a minus sign: {1}, and can combine enabling and disabling flags. For example: {2} would set enable single line and disable case insensitive.",
    "You can continue to edit in this workspace without affecting the entry you just submitted.": "You can continue to edit in this workspace without affecting the entry you just submitted.",
    "You can find the library entry here: {1}": "You can find the library entry here: {1}",
    "You can manually specify the number of replacements by changing the 4th argument": "You can manually specify the number of replacements by changing the 4th argument",
    "You can not set both the {1} and {2} flag simultaneously": "You can not set both the {1} and {2} flag simultaneously",
    "You can use alternates locally as part of a capturing/non-capturing group. For example: {1}": "You can use alternates locally as part of a capturing/non-capturing group. For example: {1}",
    "You can use hexadecimals to insert any character into the replacement string using the standard syntax.": "You can use hexadecimals to insert any character into the replacement string using the standard syntax.",
    "You cannot create a range with shorthand escape sequences": "You cannot create a range with shorthand escape sequences",
    "You cannot nest conditional replacements more than 10 levels deep": "You cannot nest conditional replacements more than 10 levels deep",
    "You do not have to create an account, just select an existing account from one of the supported service providers.": "You do not have to create an account, just select an existing account from one of the supported service providers.",
    "You have made changes since you last saved, leaving the website will result in a permanent loss of the data.": "Vous avez fait des changements depuis votre dernière sauvegarde, partir du site résulterai en une perte de données permanente.",
    "You have no tags yet, add some and organize your entries!": "You have no tags yet, add some and organize your entries!",
    "You have not added anything to your favorites yet.": "Vous n'avez encore rien ajouté à vos favoris.",
    "You have not created anything yourself yet.": "You have not created anything yourself yet.",
    "You have not submitted anything to the library yet.": "Vous n'avez encore rien ajouté à la bibliotèque.",
    "You may not use a null byte in your regex, as that effectively terminates it at that position": "You may not use a null byte in your regex, as that effectively terminates it at that position",
    "You must be signed in to vote": "You must be signed in to vote",
    "Your data can never be recovered again!": "Your data can never be recovered again!",
    "Your expression caused an unhandled error:": "Your expression caused an unhandled error:",
    "Your expression took too long to finish and was terminated. Please increase the timeout and try again.": "Your expression took too long to finish and was terminated. Please increase the timeout and try again.",
    "Your pattern contains one or more errors, please see the explanation section above.": "Your pattern contains one or more errors, please see the explanation section above.",
    "Your previous best entry has been invalidated and this task is no longer marked as completed for you.": "Your previous best entry has been invalidated and this task is no longer marked as completed for you.",
    "Your regex has been permanently saved and may be accessed with this link by anybody you give it to.": "Your regex has been permanently saved and may be accessed with this link by anybody you give it to.",
    "Your regular expression does not match the subject string.": "Your regular expression does not match the subject string.",
    "Your search did not match anything": "Your search did not match anything",
    "Your shortest solution thus far is {1} characters long. The overall shortest solution is {2} characters long.": "Your shortest solution thus far is {1} characters long. The overall shortest solution is {2} characters long.",
    "Your tag filtration returned no results.": "Votre recherche de mots-clés n'a rien donné",
    "Your workspace has been successfully submitted to the library!": "Your workspace has been successfully submitted to the library!",
    "zero": "zero",
    "Zero or more of a": "Zero or more of a",
    "Zero or one of a": "Zero ou un de"
}